<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="OAuth Flows" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="environment" elementType="Argument">
            <stringProp name="Argument.name">environment</stringProp>
            <stringProp name="Argument.value">${__P(environment,ed)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cas_service" elementType="Argument">
            <stringProp name="Argument.name">cas_service</stringProp>
            <stringProp name="Argument.value">${__P(cas_service,logined1.col.test.expertcity.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="account_service" elementType="Argument">
            <stringProp name="Argument.name">account_service</stringProp>
            <stringProp name="Argument.value">${__P(account_service,acc1ed1svc.qai.expertcity.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cas_service_port" elementType="Argument">
            <stringProp name="Argument.name">cas_service_port</stringProp>
            <stringProp name="Argument.value">${__P(cas_service_port,443)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="auth_service" elementType="Argument">
            <stringProp name="Argument.name">auth_service</stringProp>
            <stringProp name="Argument.value">${__P(auth_service,authdc1ed1svc.qai.expertcity.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="auth_service_port" elementType="Argument">
            <stringProp name="Argument.name">auth_service_port</stringProp>
            <stringProp name="Argument.value">${__P(auth_service_port,443)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="auth_service_protocol" elementType="Argument">
            <stringProp name="Argument.name">auth_service_protocol</stringProp>
            <stringProp name="Argument.value">${__P(auth_service_protocol,https)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oauth_service" elementType="Argument">
            <stringProp name="Argument.name">oauth_service</stringProp>
            <stringProp name="Argument.value">${__P(oauth_service,authenticationed1.col.test.expertcity.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oauth_service_port" elementType="Argument">
            <stringProp name="Argument.name">oauth_service_port</stringProp>
            <stringProp name="Argument.value">${__P(oauth_service_port,443)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oauth_service_protocol" elementType="Argument">
            <stringProp name="Argument.name">oauth_service_protocol</stringProp>
            <stringProp name="Argument.value">${__P(oauth_service_protocol,https)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oauth_service_baseURL" elementType="Argument">
            <stringProp name="Argument.name">oauth_service_baseURL</stringProp>
            <stringProp name="Argument.value">${__P(oauth_service_baseURL,https://authenticationed1.col.test.expertcity.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="client_id" elementType="Argument">
            <stringProp name="Argument.name">client_id</stringProp>
            <stringProp name="Argument.value">${__P(client_id,decrypt(clientId\, FHGvN0qchnusbchLHkPW7A==:HVvFbC3T9sVell19apB5QcHJtWpekDXogEQ5zbNlfxmPxbgzqiyMA6uDA1NSr5F7chDLx5lMhBcEGPoSd7GVHioYx7nccG49fsHJULDNmrk=))}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="client_secret" elementType="Argument">
            <stringProp name="Argument.name">client_secret</stringProp>
            <stringProp name="Argument.value">${__P(client_secret,decrypt(clientSecret\, qrjKzmF5DDkjx1mKwU5xnw==:MOKskECWcI5RIV6cYd9HzgoCuJAaVKM1rCJcNhS7gQ/ZSXHH607Ox2+eQlknYUB5IotHcBFCJjk1kav3CgbHag==))}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="client_redirect_uri" elementType="Argument">
            <stringProp name="Argument.name">client_redirect_uri</stringProp>
            <stringProp name="Argument.value">${__P(client_redirect_uri,http://localhost)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="client_scopes" elementType="Argument">
            <stringProp name="Argument.name">client_scopes</stringProp>
            <stringProp name="Argument.value">${__P(client_scopes,read)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="user_id" elementType="Argument">
            <stringProp name="Argument.name">user_id</stringProp>
            <stringProp name="Argument.value">${__P(user_id,6700660602277594886)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="email_address" elementType="Argument">
            <stringProp name="Argument.name">email_address</stringProp>
            <stringProp name="Argument.value">${__P(email_address,skp-oauthed1@jedix.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">${__P(password,secret11)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="token_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">token_client_authorization</stringProp>
            <stringProp name="Argument.value">${__P(token_client_authorization,YWEzNGNlYWUtNDE4YS00NzdkLWEwNWUtMWI3ZmNmMDAxM2ViOmMvTXJ1b0FhZktLUk5xdlpRNHRsNVE9PQ==)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="token_admin_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">token_admin_client_authorization</stringProp>
            <stringProp name="Argument.value">${__P(token_admin_client_authorization,ZjNlOWMyMjEtZTZlZS00OTAwLTg1MjEtMGExNzczZDVhOTA0OmV6dTlUQ0VTeXJKc0dxbHJEdzZsTUE9PQ==)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="validate_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">validate_client_authorization</stringProp>
            <stringProp name="Argument.value">${__P(validate_client_authorization,YWEzNGNlYWUtNDE4YS00NzdkLWEwNWUtMWI3ZmNmMDAxM2ViOmMvTXJ1b0FhZktLUk5xdlpRNHRsNVE9PQ==)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="principal" elementType="Argument">
            <stringProp name="Argument.name">principal</stringProp>
            <stringProp name="Argument.value">${__P(principal,testUser@jedix.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="accept_Type_Json" elementType="Argument">
            <stringProp name="Argument.name">accept_Type_Json</stringProp>
            <stringProp name="Argument.value">${__P(accept_Type_Json,application/json)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="content_Type_Json" elementType="Argument">
            <stringProp name="Argument.name">content_Type_Json</stringProp>
            <stringProp name="Argument.value">${__P(content_Type_Json,application/json)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="content_Type_Urlencoded" elementType="Argument">
            <stringProp name="Argument.name">content_Type_Urlencoded</stringProp>
            <stringProp name="Argument.value">${__P(content_Type_Urlencoded,application/x-www-form-urlencoded)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="accept_Type_Xml" elementType="Argument">
            <stringProp name="Argument.name">accept_Type_Xml</stringProp>
            <stringProp name="Argument.value">${__P(accept_Type_Json,application/xml)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="invalid_auth_header" elementType="Argument">
            <stringProp name="Argument.name">invalid_auth_header</stringProp>
            <stringProp name="Argument.value">${__P(invalid_auth_header,N2YzMzUyMTctMzY4Yy00YzlkLThhYjctNzliZjI3ZGI5M2U2OjZBNEQwZzdpMFlkdGpFM2NEOWxtUmc9PQ==)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="bad_auth_header" elementType="Argument">
            <stringProp name="Argument.name">bad_auth_header</stringProp>
            <stringProp name="Argument.value">${__P(bad_auth_header,YWEzNGNlYWUtNDE4=I3ZmNmMDAxM2ViOmMvTXJ1b0FhZktLUk5xdlpRNHRsN)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="other_valid_auth_header" elementType="Argument">
            <stringProp name="Argument.name">other_valid_auth_header</stringProp>
            <stringProp name="Argument.value">${__P(other_valid_auth_header,ODkwY2U1ZjktZDg0NS00NjllLTk4NWMtYjYzZjcxNzRlNGFhOjUxOXhIT293Q21ma1BCa0R5cytiYXc9PQ==)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="invalid_redirect_uri" elementType="Argument">
            <stringProp name="Argument.name">invalid_redirect_uri</stringProp>
            <stringProp name="Argument.value">${__P(invalid_redirect_uri,http://invalid.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="invalid_client_id" elementType="Argument">
            <stringProp name="Argument.name">invalid_client_id</stringProp>
            <stringProp name="Argument.value">${__P(invalid_client_id,bb56dfbf-529b-588e-b16f-2c8gdg1124fc)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="invalid_response_type" elementType="Argument">
            <stringProp name="Argument.name">invalid_response_type</stringProp>
            <stringProp name="Argument.value">${__P(invalid_response_type,invalid)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="invalid_client_scopes" elementType="Argument">
            <stringProp name="Argument.name">invalid_client_scopes</stringProp>
            <stringProp name="Argument.value">${__P(invalid_client_scopes,everything)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="invalid_authorization_code" elementType="Argument">
            <stringProp name="Argument.name">invalid_authorization_code</stringProp>
            <stringProp name="Argument.value">${__P(invalid_authorization_code, 1-dca-invalid-authcode-3c7c64c0dffc)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="invalid_grant_type" elementType="Argument">
            <stringProp name="Argument.name">invalid_grant_type</stringProp>
            <stringProp name="Argument.value">${__P(invalid_response_type,invalid)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="invalid_email_address" elementType="Argument">
            <stringProp name="Argument.name">invalid_email_address</stringProp>
            <stringProp name="Argument.value">${__P(invalid_email_address, invalidoauthuser@invalid.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="invalid_password" elementType="Argument">
            <stringProp name="Argument.name">invalid_password</stringProp>
            <stringProp name="Argument.value">${__P(invalid_password, invalid)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="invalid_access_token" elementType="Argument">
            <stringProp name="Argument.name">invalid_access_token</stringProp>
            <stringProp name="Argument.value">${__P(invalid_access_token, 1-dca-invalid-accesstoken-3c7c64c0dffc)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="invalid_refresh_token" elementType="Argument">
            <stringProp name="Argument.name">invalid_refresh_token</stringProp>
            <stringProp name="Argument.value">${__P(invalid_refresh_token, 1-dca-invalid-refreshtoken-3c7c64c0dffc)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="email_address_softlockout" elementType="Argument">
            <stringProp name="Argument.name">email_address_softlockout</stringProp>
            <stringProp name="Argument.value">${__P(email_address_softlockout,sm-oauthed1soflockout@jedix.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="account_service_protocol" elementType="Argument">
            <stringProp name="Argument.name">account_service_protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="account_service_context" elementType="Argument">
            <stringProp name="Argument.name">account_service_context</stringProp>
            <stringProp name="Argument.value">${__P(account_service_context,/v2)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="account_service_port" elementType="Argument">
            <stringProp name="Argument.name">account_service_port</stringProp>
            <stringProp name="Argument.value">${__P(account_service_port,443)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="client_name" elementType="Argument">
            <stringProp name="Argument.name">client_name</stringProp>
            <stringProp name="Argument.value">${__P(client_name,oauth_jmeter)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oauth_dc1" elementType="Argument">
            <stringProp name="Argument.name">oauth_dc1</stringProp>
            <stringProp name="Argument.value">${__P(oauth_dc1,oauth1ed1svc.col.test.expertcity.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oauth_dc2" elementType="Argument">
            <stringProp name="Argument.name">oauth_dc2</stringProp>
            <stringProp name="Argument.value">${__P(oauth_dc2,oauth2ed1svc.col.test.expertcity.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="email_address_suspended" elementType="Argument">
            <stringProp name="Argument.name">email_address_suspended</stringProp>
            <stringProp name="Argument.value">${__P(email_address_suspended, sm-oauthed1suspended@jedix.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="implicit_client_id" elementType="Argument">
            <stringProp name="Argument.name">implicit_client_id</stringProp>
            <stringProp name="Argument.value">${__P(implicit_client_id,9642a20a-d7fb-43dc-ace1-6ab434f47e3e)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="implicit_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">implicit_client_authorization</stringProp>
            <stringProp name="Argument.value">${__P(implicit_client_authorization,OTY0MmEyMGEtZDdmYi00M2RjLWFjZTEtNmFiNDM0ZjQ3ZTNlOmV3MHhSZUtFOVo3dittaE1DTnBWRnc9PQ==)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="non-implicit_auto-approved_client_id" elementType="Argument">
            <stringProp name="Argument.name">non-implicit_auto-approved_client_id</stringProp>
            <stringProp name="Argument.value">${__P(non-implicit_auto-approved_client_id,f053ea55-08c8-4626-ba33-4ce75ff35dfb)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="non-implicit_non-auto-approved_client_id" elementType="Argument">
            <stringProp name="Argument.name">non-implicit_non-auto-approved_client_id</stringProp>
            <stringProp name="Argument.value">${__P(non-implicit_non-auto-approved_client_id,6f1aa1c1-3c5e-44c9-8fe5-2d2a7e25078c)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="invalid_user_id" elementType="Argument">
            <stringProp name="Argument.name">invalid_user_id</stringProp>
            <stringProp name="Argument.value">${__P(invalid_user_id,600000000000000000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="unregistered_redirect_uri" elementType="Argument">
            <stringProp name="Argument.name">unregistered_redirect_uri</stringProp>
            <stringProp name="Argument.value">${__P(unregistered_redirect_uri,http://localhost.cn)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="softLockoutThreshold" elementType="Argument">
            <stringProp name="Argument.name">softLockoutThreshold</stringProp>
            <stringProp name="Argument.value">${__P(softLockoutThreshold,5)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="internal_service_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">internal_service_client_authorization</stringProp>
            <stringProp name="Argument.value">${__P(internal_service_client_authorization,MzQzNjdkZWMtZWYyZC00MWY2LTg4OTUtMjIzMTY4NzVjMWUzOi9ZalphcFdacU1GSkJPc2RlS29FdkE9PQ==)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oauth_dc1_name" elementType="Argument">
            <stringProp name="Argument.name">oauth_dc1_name</stringProp>
            <stringProp name="Argument.value">${__P(oauth_dc1_name, dca)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oauth_dc2_name" elementType="Argument">
            <stringProp name="Argument.name">oauth_dc2_name</stringProp>
            <stringProp name="Argument.value">${__P(oauth_dc2_name, dcb)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="enableLockOutTest" elementType="Argument">
            <stringProp name="Argument.name">enableLockOutTest</stringProp>
            <stringProp name="Argument.value">${__P(enableLockOutTest, 0)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="enableDCTests" elementType="Argument">
            <stringProp name="Argument.name">enableDCTests</stringProp>
            <stringProp name="Argument.value">${__P(enableDCTests,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="client_authorization_nonexistentRole" elementType="Argument">
            <stringProp name="Argument.name">client_authorization_nonexistentRole</stringProp>
            <stringProp name="Argument.value">${__P(client_authorization_nonexistentRole,NmIwYTFhNjYtNzg1MS00OWU5LTg0OTEtZjk5NDRjNjhlZGVkOlpocm4wVVZkQjlkOUtFaE0zUW9kMnc9PQ==)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oauth_dc1_node1" elementType="Argument">
            <stringProp name="Argument.name">oauth_dc1_node1</stringProp>
            <stringProp name="Argument.value">${__P(oauth_dc1_node1,oauth1ed1svc1.cs.qai.expertcity.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oauth_dc1_node2" elementType="Argument">
            <stringProp name="Argument.name">oauth_dc1_node2</stringProp>
            <stringProp name="Argument.value">${__P(oauth_dc1_node2,oauth1ed1svc2.cs.qai.expertcity.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="No-CI" elementType="Argument">
            <stringProp name="Argument.name">No-CI</stringProp>
            <stringProp name="Argument.value">${__P(No-CI,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="email.prefix" elementType="Argument">
            <stringProp name="Argument.name">email.prefix</stringProp>
            <stringProp name="Argument.value">${__P(email.prefix,sm)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="update_password_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">update_password_client_authorization</stringProp>
            <stringProp name="Argument.value">${__P(update_password_client_authorization,OWIwMGIxNTktMzNjNi00MWI0LThlN2UtZWY4ZjA2YTBkZjg0OjFUVDJoUG5RSTFVZ09XRys3VG1VUkE9PQ==)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="update_password_email_address" elementType="Argument">
            <stringProp name="Argument.name">update_password_email_address</stringProp>
            <stringProp name="Argument.value">${__P(update_password_email_address,sm-ed1oauth@jedix.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="facebook_access_token" elementType="Argument">
            <stringProp name="Argument.name">facebook_access_token</stringProp>
            <stringProp name="Argument.value">${__P(facebook_access_token,CAACEdEose0cBAIkq1Abr7zj38OxYc1pjPLOYocsokHEDRZAtHz223OHiXnMZBV4hZBVfx2weAMqyKKTLUkZA5O1hlCYzSAuYI8Uu8cuezgtfl6lOPXW3v9ew4OHxsuGKyRZCYJXZB3eijU5NAZBPLhMU4ftCZBztIdUoSRZCywbZCuZBqyonLH6KWexAO3P3K0SSaAh6Gui2dprkAZDZD)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="crossdc_pause" elementType="Argument">
            <stringProp name="Argument.name">crossdc_pause</stringProp>
            <stringProp name="Argument.value">7000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="public_client_id" elementType="Argument">
            <stringProp name="Argument.name">public_client_id</stringProp>
            <stringProp name="Argument.value">12c2367c-e773-424c-b6c2-35e17d784ad0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="public_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">public_client_authorization</stringProp>
            <stringProp name="Argument.value">MTJjMjM2N2MtZTc3My00MjRjLWI2YzItMzVlMTdkNzg0YWQwOmFueXRoaW5n</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="public_client_redirect_uri" elementType="Argument">
            <stringProp name="Argument.name">public_client_redirect_uri</stringProp>
            <stringProp name="Argument.value">http://www.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="g2m_url" elementType="Argument">
            <stringProp name="Argument.name">g2m_url</stringProp>
            <stringProp name="Argument.value">${__P(g2m_urlI,globaled1.g2m.test.expertcity.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="launcher_url" elementType="Argument">
            <stringProp name="Argument.name">launcher_url</stringProp>
            <stringProp name="Argument.value">${__P(launcher_urlI,launchered1.citrixonline.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="global_g2m_user" elementType="Argument">
            <stringProp name="Argument.name">global_g2m_user</stringProp>
            <stringProp name="Argument.value">${__P(global_g2m_user,sm-globaled1g2m@jedix.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="password_reset_required_email_address" elementType="Argument">
            <stringProp name="Argument.name">password_reset_required_email_address</stringProp>
            <stringProp name="Argument.value">${__P(password_reset_required_email_address,sm-oauthed1passwordresetrequired@jedix.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="password_reset_required_user_id" elementType="Argument">
            <stringProp name="Argument.name">password_reset_required_user_id</stringProp>
            <stringProp name="Argument.value">${__P(password_reset_required_user_id,1885465990313685514)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cas_service_protocol" elementType="Argument">
            <stringProp name="Argument.name">cas_service_protocol</stringProp>
            <stringProp name="Argument.value">${__P(cas_service_protocol,https)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="portal_service_protocol" elementType="Argument">
            <stringProp name="Argument.name">portal_service_protocol</stringProp>
            <stringProp name="Argument.value">${__P(portal_service_protocol,https)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="portal_service_url" elementType="Argument">
            <stringProp name="Argument.name">portal_service_url</stringProp>
            <stringProp name="Argument.value">${__P(portal_service,portaled1svc.qai.expertcity.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="portal_admin_emailAddress" elementType="Argument">
            <stringProp name="Argument.name">portal_admin_emailAddress</stringProp>
            <stringProp name="Argument.value">${__P(portal_admin_emailAddress,pt-portaltestclient@jedix.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="modifedClient_clientId" elementType="Argument">
            <stringProp name="Argument.name">modifedClient_clientId</stringProp>
            <stringProp name="Argument.value">5d5159b7-306f-4c6f-9c26-49a682985741</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="portal_admin_userId" elementType="Argument">
            <stringProp name="Argument.name">portal_admin_userId</stringProp>
            <stringProp name="Argument.value">${__P(portal_admin_userId,2628232272596202505)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="modifedClient_clientName" elementType="Argument">
            <stringProp name="Argument.name">modifedClient_clientName</stringProp>
            <stringProp name="Argument.value">testcache</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="modifedClient_redirectUri" elementType="Argument">
            <stringProp name="Argument.name">modifedClient_redirectUri</stringProp>
            <stringProp name="Argument.value">http://www.citrix.com </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="access_token_validity" elementType="Argument">
            <stringProp name="Argument.name">access_token_validity</stringProp>
            <stringProp name="Argument.value">${__P(access_token_validity,3600)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="refresh_token_validity" elementType="Argument">
            <stringProp name="Argument.name">refresh_token_validity</stringProp>
            <stringProp name="Argument.value">${__P(refresh_token_validity,86400)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="modified_access_token_validity" elementType="Argument">
            <stringProp name="Argument.name">modified_access_token_validity</stringProp>
            <stringProp name="Argument.value">100</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="portal_admin_email" elementType="Argument">
            <stringProp name="Argument.name">portal_admin_email</stringProp>
            <stringProp name="Argument.value">${__P(portal_admin_email,pt-portaltestclient@jedix.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="portal_service_port" elementType="Argument">
            <stringProp name="Argument.name">portal_service_port</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oauth_basic" elementType="Argument">
            <stringProp name="Argument.name">oauth_basic</stringProp>
            <stringProp name="Argument.value">${__P(oauth_basic,NWQ1MTU5YjctMzA2Zi00YzZmLTljMjYtNDlhNjgyOTg1NzQxOm1ENGtoUTZWOGo0N3pTakN5WkRKeGc9PQ==)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pause_time" elementType="Argument">
            <stringProp name="Argument.name">pause_time</stringProp>
            <stringProp name="Argument.value">5000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oauth_node_port" elementType="Argument">
            <stringProp name="Argument.name">oauth_node_port</stringProp>
            <stringProp name="Argument.value">8080</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oauth_node_protocol" elementType="Argument">
            <stringProp name="Argument.name">oauth_node_protocol</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oob_mismatch_client_id" elementType="Argument">
            <stringProp name="Argument.name">oob_mismatch_client_id</stringProp>
            <stringProp name="Argument.value">${__P(oob_mismatch_client_id,1a8d8c2a-7ee8-4627-80b8-8224bdc8ab99)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oob_client_id" elementType="Argument">
            <stringProp name="Argument.name">oob_client_id</stringProp>
            <stringProp name="Argument.value">${__P(oob_client_id,43d9022d-85a6-40f6-ab89-88a408e8d464)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oob_auto_client_id" elementType="Argument">
            <stringProp name="Argument.name">oob_auto_client_id</stringProp>
            <stringProp name="Argument.value">${__P(oob_auto_client_id,4ae6bf58-2f66-40dc-8854-14421ad16180)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oob_not_registered_client_id" elementType="Argument">
            <stringProp name="Argument.name">oob_not_registered_client_id</stringProp>
            <stringProp name="Argument.value">${__P(oob_not_registered_client_id,84bc8b3c-1acc-4445-803b-1fde20dc467f)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oob_client_credentials" elementType="Argument">
            <stringProp name="Argument.name">oob_client_credentials</stringProp>
            <stringProp name="Argument.value">${__P(oob_client_credentials,NDNkOTAyMmQtODVhNi00MGY2LWFiODktODhhNDA4ZThkNDY0OnhqOVc4Mjg5TlNZK1RCcHJMc0w5bFE9PQ==)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oob_auto_client_credentials" elementType="Argument">
            <stringProp name="Argument.name">oob_auto_client_credentials</stringProp>
            <stringProp name="Argument.value">${__P(oob_auto_client_credentials,NGFlNmJmNTgtMmY2Ni00MGRjLTg4NTQtMTQ0MjFhZDE2MTgwOi9IR2hQaWRaRWdncnRrYXZDVHpmWVE9PQ==)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="apigee_client_id" elementType="Argument">
            <stringProp name="Argument.name">apigee_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId, a7koRiKYNZn/CJEa6r2+Ow==:B2kHWmYodcDvsbFQgkk15zbMwmxeImTdZ9giPFPLVuIR+c3tus8Le7nffidErgzV1oEmDx8GJw980qZK+jvDu9+n3+3b1YklQj8EVX9gSkI=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="multibyte_emailAddress" elementType="Argument">
            <stringProp name="Argument.name">multibyte_emailAddress</stringProp>
            <stringProp name="Argument.value">${__P(multibyte_emailAddress,sm-ed1multibyte-de-zn@jedix.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="multibyte_password" elementType="Argument">
            <stringProp name="Argument.name">multibyte_password</stringProp>
            <stringProp name="Argument.value">${__P(multibyte_password,1a!§$&amp;/()=?&lt;&gt;[]|{}ä李特)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="auditor_service" elementType="Argument">
            <stringProp name="Argument.name">auditor_service</stringProp>
            <stringProp name="Argument.value">${__P(auditor_service,audited1svc.qai.expertcity.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="auditor_service_port" elementType="Argument">
            <stringProp name="Argument.name">auditor_service_port</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="invalid_dc_token" elementType="Argument">
            <stringProp name="Argument.name">invalid_dc_token</stringProp>
            <stringProp name="Argument.value">1-fake-test1234bca</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="junk_theme_client_id" elementType="Argument">
            <stringProp name="Argument.name">junk_theme_client_id</stringProp>
            <stringProp name="Argument.value">${__P(junk_theme_client_id,bfdd2175-025b-49a4-b603-760311c15c1e)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="g2mEndpoint_client_id" elementType="Argument">
            <stringProp name="Argument.name">g2mEndpoint_client_id</stringProp>
            <stringProp name="Argument.value">${__P(g2mEndpoint_client_id,f1b94e77-056a-4443-9d88-a9357a07c36b)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="direct_code_client_id" elementType="Argument">
            <stringProp name="Argument.name">direct_code_client_id</stringProp>
            <stringProp name="Argument.value">${__P(direct_code_client_id,b5896f91-171d-4de6-a658-ac1ea6208fe8)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="direct_code_client_secret" elementType="Argument">
            <stringProp name="Argument.name">direct_code_client_secret</stringProp>
            <stringProp name="Argument.value">${__P(direct_code_client_secret,iwzre96lvKbkj7nCPHQLHQ==)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="direct_code_redirect" elementType="Argument">
            <stringProp name="Argument.name">direct_code_redirect</stringProp>
            <stringProp name="Argument.value">urn:citrix:oauth:direct_code</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="direct_code_authorization" elementType="Argument">
            <stringProp name="Argument.name">direct_code_authorization</stringProp>
            <stringProp name="Argument.value">${__P(direct_code_authorization,YjU4OTZmOTEtMTcxZC00ZGU2LWE2NTgtYWMxZWE2MjA4ZmU4Oml3enJlOTZsdktia2o3bkNQSFFMSFE9PQ==)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="direct_code_target_client_id" elementType="Argument">
            <stringProp name="Argument.name">direct_code_target_client_id</stringProp>
            <stringProp name="Argument.value">${__P(direct_code_target_client_id,7e75f691-dab2-4de6-9562-811527609715)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="direct_code_target_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">direct_code_target_client_authorization</stringProp>
            <stringProp name="Argument.value">N2U3NWY2OTEtZGFiMi00ZGU2LTk1NjItODExNTI3NjA5NzE1OkVhb3NJZ240d0xSWlEyejM0R0hrZWc9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="directCodeAuthorizationWrongSecret" elementType="Argument">
            <stringProp name="Argument.name">directCodeAuthorizationWrongSecret</stringProp>
            <stringProp name="Argument.value">YjU4OTZmOTEtMTcxZC00ZGU2LWE2NTgtYWMxZWE2MjA4ZmU4OkJMQUg=</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="direct_code_consumer_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">direct_code_consumer_client_authorization</stringProp>
            <stringProp name="Argument.value">NjI0N2UwZGYtY2JjNi00ZTY3LTg2N2YtOGRiYjY2ODdkNGRjOm9pNUtzQkpuaE1ETndyZ1hsODBnOEE9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="clientAPI_client_id" elementType="Argument">
            <stringProp name="Argument.name">clientAPI_client_id</stringProp>
            <stringProp name="Argument.value">d526718a-7f80-4d77-ad74-70f31bfe1127</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="clientAPI_client_id_2" elementType="Argument">
            <stringProp name="Argument.name">clientAPI_client_id_2</stringProp>
            <stringProp name="Argument.value">9a524eec-1815-43a8-9478-d823baf003d9</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="clientAPI_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">clientAPI_client_authorization</stringProp>
            <stringProp name="Argument.value">ZDUyNjcxOGEtN2Y4MC00ZDc3LWFkNzQtNzBmMzFiZmUxMTI3Ok55WUlwZzB2OHY3cUxacGJ0M3hxbXc9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="clientAPI_email_address" elementType="Argument">
            <stringProp name="Argument.name">clientAPI_email_address</stringProp>
            <stringProp name="Argument.value">skp-oauthed1@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="clientAPI_noscope_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">clientAPI_noscope_client_authorization</stringProp>
            <stringProp name="Argument.value">NDEzNGIyYWMtYTE1ZS00ZmJhLWE2NzQtMzk0NzdhYzk3ZjBkOnd4dE1xY1RUdENzNU9CaDNZcHZ3UlE9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="clientAPI_another_user_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">clientAPI_another_user_client_authorization</stringProp>
            <stringProp name="Argument.value">OTc5ZmJjNDYtOGY1ZC00YzQxLWIzM2UtNDc5OTk5NjQwYzk3OkFTUWovRFJETFhzTE9Ec1Y0VGk0Q1E9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="clientAPI_another_email_address" elementType="Argument">
            <stringProp name="Argument.name">clientAPI_another_email_address</stringProp>
            <stringProp name="Argument.value">tli-portaladmin@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="CI Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ci:oauth_service" elementType="Argument">
            <stringProp name="Argument.name">ci:oauth_service</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:oauth_service_port" elementType="Argument">
            <stringProp name="Argument.name">ci:oauth_service_port</stringProp>
            <stringProp name="Argument.value">${__P(oauth_service_port,60055)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:oauth_service_protocol" elementType="Argument">
            <stringProp name="Argument.name">ci:oauth_service_protocol</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:oauth_service_baseURL" elementType="Argument">
            <stringProp name="Argument.name">ci:oauth_service_baseURL</stringProp>
            <stringProp name="Argument.value">http://localhost:${oauth_service_port}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:client_id" elementType="Argument">
            <stringProp name="Argument.name">ci:client_id</stringProp>
            <stringProp name="Argument.value">internalService</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:client_secret" elementType="Argument">
            <stringProp name="Argument.name">ci:client_secret</stringProp>
            <stringProp name="Argument.value">internalService</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:client_redirect_uri" elementType="Argument">
            <stringProp name="Argument.name">ci:client_redirect_uri</stringProp>
            <stringProp name="Argument.value">http://www.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:token_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">ci:token_client_authorization</stringProp>
            <stringProp name="Argument.value">aW50ZXJuYWxTZXJ2aWNlOmludGVybmFsU2VydmljZQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:token_admin_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">ci:token_admin_client_authorization</stringProp>
            <stringProp name="Argument.value">dG9rZW5BZG1pbjp0b2tlbkFkbWlu</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:validate_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">ci:validate_client_authorization</stringProp>
            <stringProp name="Argument.value">aW50ZXJuYWxTZXJ2aWNlOmludGVybmFsU2VydmljZQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:other_valid_auth_header" elementType="Argument">
            <stringProp name="Argument.name">ci:other_valid_auth_header</stringProp>
            <stringProp name="Argument.value">bm9uSW1wbGljaXRBdXRvQXBwcm92ZWRDbGllbnQ6Y2xpZW50U2VjcmV0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:invalid_client_id" elementType="Argument">
            <stringProp name="Argument.name">ci:invalid_client_id</stringProp>
            <stringProp name="Argument.value">bb56dfbf-529b-588e-b16f-2c8gdg1124fc</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:invalid_authorization_code" elementType="Argument">
            <stringProp name="Argument.name">ci:invalid_authorization_code</stringProp>
            <stringProp name="Argument.value">1-local-invalid-authcode-3c7c64c0dffc</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:invalid_access_token" elementType="Argument">
            <stringProp name="Argument.name">ci:invalid_access_token</stringProp>
            <stringProp name="Argument.value">1-local-invalid-accesstoken-3c7c64c0dffc</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:invalid_refresh_token" elementType="Argument">
            <stringProp name="Argument.name">ci:invalid_refresh_token</stringProp>
            <stringProp name="Argument.value">1-local-invalid-refreshtoken-3c7c64c0dffc</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:oauth_dc1" elementType="Argument">
            <stringProp name="Argument.name">ci:oauth_dc1</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:oauth_dc2" elementType="Argument">
            <stringProp name="Argument.name">ci:oauth_dc2</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:implicit_client_id" elementType="Argument">
            <stringProp name="Argument.name">ci:implicit_client_id</stringProp>
            <stringProp name="Argument.value">implicitClient</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:implicit_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">ci:implicit_client_authorization</stringProp>
            <stringProp name="Argument.value">aW1wbGljaXRDbGllbnQ6aW1wbGljaXRDbGllbnQ=</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:non-implicit_auto-approved_client_id" elementType="Argument">
            <stringProp name="Argument.name">ci:non-implicit_auto-approved_client_id</stringProp>
            <stringProp name="Argument.value">nonImplicitAutoApprovedClient</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:non-implicit_non-auto-approved_client_id" elementType="Argument">
            <stringProp name="Argument.name">ci:non-implicit_non-auto-approved_client_id</stringProp>
            <stringProp name="Argument.value">nonImplicitNonAutoApprovedClient</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:softLockoutThreshold" elementType="Argument">
            <stringProp name="Argument.name">ci:softLockoutThreshold</stringProp>
            <stringProp name="Argument.value">3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:internal_service_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">ci:internal_service_client_authorization</stringProp>
            <stringProp name="Argument.value">aW50ZXJuYWxTZXJ2aWNlOmludGVybmFsU2VydmljZQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:oauth_dc1_name" elementType="Argument">
            <stringProp name="Argument.name">ci:oauth_dc1_name</stringProp>
            <stringProp name="Argument.value">local</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:oauth_dc2_name" elementType="Argument">
            <stringProp name="Argument.name">ci:oauth_dc2_name</stringProp>
            <stringProp name="Argument.value">localz</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:enableLockOutTest" elementType="Argument">
            <stringProp name="Argument.name">ci:enableLockOutTest</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:oauth_dc1_node1" elementType="Argument">
            <stringProp name="Argument.name">ci:oauth_dc1_node1</stringProp>
            <stringProp name="Argument.value">local1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:oauth_dc1_node2" elementType="Argument">
            <stringProp name="Argument.name">ci:oauth_dc1_node2</stringProp>
            <stringProp name="Argument.value">local2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:No-CI" elementType="Argument">
            <stringProp name="Argument.name">ci:No-CI</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:client_authorization_nonexistentRole" elementType="Argument">
            <stringProp name="Argument.name">ci:client_authorization_nonexistentRole</stringProp>
            <stringProp name="Argument.value">dGVzdDp0ZXN0U2VjcmV0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:crossdc_pause" elementType="Argument">
            <stringProp name="Argument.name">ci:crossdc_pause</stringProp>
            <stringProp name="Argument.value">100</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:public_client_id" elementType="Argument">
            <stringProp name="Argument.name">ci:public_client_id</stringProp>
            <stringProp name="Argument.value">publicClient</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:public_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">ci:public_client_authorization</stringProp>
            <stringProp name="Argument.value">cHVibGljQ2xpZW50OmFueXRoaW5n</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:cas_service_protocol" elementType="Argument">
            <stringProp name="Argument.name">ci:cas_service_protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:portal_service_protocol" elementType="Argument">
            <stringProp name="Argument.name">ci:portal_service_protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:portal_service_url" elementType="Argument">
            <stringProp name="Argument.name">ci:portal_service_url</stringProp>
            <stringProp name="Argument.value">portaled1svc.qai.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:portal_admin_emailAddress" elementType="Argument">
            <stringProp name="Argument.name">ci:portal_admin_emailAddress</stringProp>
            <stringProp name="Argument.value">pt-portaltestclient@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:modifedClient_clientId" elementType="Argument">
            <stringProp name="Argument.name">ci:modifedClient_clientId</stringProp>
            <stringProp name="Argument.value">d7305657-1d3b-4e09-bcde-aee183398e31</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:portal_admin_userId" elementType="Argument">
            <stringProp name="Argument.name">ci:portal_admin_userId</stringProp>
            <stringProp name="Argument.value">7813087095911440394</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:modifedClient_clientName" elementType="Argument">
            <stringProp name="Argument.name">ci:modifedClient_clientName</stringProp>
            <stringProp name="Argument.value">testcache</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:modifedClient_redirectUri" elementType="Argument">
            <stringProp name="Argument.name">ci:modifedClient_redirectUri</stringProp>
            <stringProp name="Argument.value">http://www.citrix.com </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:access_token_validity" elementType="Argument">
            <stringProp name="Argument.name">ci:access_token_validity</stringProp>
            <stringProp name="Argument.value">access_token_validity,3600</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:refresh_token_validity" elementType="Argument">
            <stringProp name="Argument.name">ci:refresh_token_validity</stringProp>
            <stringProp name="Argument.value">86400</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:portal_admin_email" elementType="Argument">
            <stringProp name="Argument.name">ci:portal_admin_email</stringProp>
            <stringProp name="Argument.value">tli-portaladmin@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:portal_service_port" elementType="Argument">
            <stringProp name="Argument.name">ci:portal_service_port</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:oauth_basic" elementType="Argument">
            <stringProp name="Argument.name">ci:oauth_basic</stringProp>
            <stringProp name="Argument.value">ZDczMDU2NTctMWQzYi00ZTA5LWJjZGUtYWVlMTgzMzk4ZTMxOnlZV0ZobCthZzVJT2o5RlRyN24xNGc9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:oob_client_id" elementType="Argument">
            <stringProp name="Argument.name">ci:oob_client_id</stringProp>
            <stringProp name="Argument.value">oobClient</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:oob_auto_client_id" elementType="Argument">
            <stringProp name="Argument.name">ci:oob_auto_client_id</stringProp>
            <stringProp name="Argument.value">oobAutoClient</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:oob_auto_client_credentials" elementType="Argument">
            <stringProp name="Argument.name">ci:oob_auto_client_credentials</stringProp>
            <stringProp name="Argument.value">b29iQXV0b0NsaWVudDpvb2JBdXRvQ2xpZW50</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:oob_client_credentials" elementType="Argument">
            <stringProp name="Argument.name">ci:oob_client_credentials</stringProp>
            <stringProp name="Argument.value">b29iQ2xpZW50Om9vYkNsaWVudA==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:oob_mismatch_client_id" elementType="Argument">
            <stringProp name="Argument.name">ci:oob_mismatch_client_id</stringProp>
            <stringProp name="Argument.value">oobClient</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:oob_not_registered_client_id" elementType="Argument">
            <stringProp name="Argument.name">ci:oob_not_registered_client_id</stringProp>
            <stringProp name="Argument.value">oobNotRegisteredClient</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:apigee_client_id" elementType="Argument">
            <stringProp name="Argument.name">ci:apigee_client_id</stringProp>
            <stringProp name="Argument.value">apigee</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:multibyte_emailAddress" elementType="Argument">
            <stringProp name="Argument.name">ci:multibyte_emailAddress</stringProp>
            <stringProp name="Argument.value">sm-ed1multibyte-de-zn@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:g2mEndpoint_client_id" elementType="Argument">
            <stringProp name="Argument.name">ci:g2mEndpoint_client_id</stringProp>
            <stringProp name="Argument.value">g2mEndpointClient</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:direct_code_client_id" elementType="Argument">
            <stringProp name="Argument.name">ci:direct_code_client_id</stringProp>
            <stringProp name="Argument.value">directCodeClient</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:direct_code_client_secret" elementType="Argument">
            <stringProp name="Argument.name">ci:direct_code_client_secret</stringProp>
            <stringProp name="Argument.value">secret11</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:direct_code_authorization" elementType="Argument">
            <stringProp name="Argument.name">ci:direct_code_authorization</stringProp>
            <stringProp name="Argument.value">ZGlyZWN0Q29kZUNsaWVudDpzZWNyZXQxMQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:direct_code_target_client_id" elementType="Argument">
            <stringProp name="Argument.name">ci:direct_code_target_client_id</stringProp>
            <stringProp name="Argument.value">directCodeTargetClient</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:direct_code_target_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">ci:direct_code_target_client_authorization</stringProp>
            <stringProp name="Argument.value">ZGlyZWN0Q29kZVRhcmdldENsaWVudDpkaXJlY3RfY29kZV90YXJnZXRfY2xpZW50</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:direct_code_consumer_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">ci:direct_code_consumer_client_authorization</stringProp>
            <stringProp name="Argument.value">ZGlyZWN0Q29kZUNvbnN1bWVyQ2xpZW50OmRpcmVjdENvZGVDb25zdW1lckNsaWVudA==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:clientAPI_client_id" elementType="Argument">
            <stringProp name="Argument.name">ci:clientAPI_client_id</stringProp>
            <stringProp name="Argument.value">d526718a-7f80-4d77-ad74-70f31bfe1127</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:clientAPI_client_id_2" elementType="Argument">
            <stringProp name="Argument.name">ci:clientAPI_client_id_2</stringProp>
            <stringProp name="Argument.value">9a524eec-1815-43a8-9478-d823baf003d9</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:clientAPI_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">ci:clientAPI_client_authorization</stringProp>
            <stringProp name="Argument.value">ZDUyNjcxOGEtN2Y4MC00ZDc3LWFkNzQtNzBmMzFiZmUxMTI3Ok55WUlwZzB2OHY3cUxacGJ0M3hxbXc9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:clientAPI_email_address" elementType="Argument">
            <stringProp name="Argument.name">ci:clientAPI_email_address</stringProp>
            <stringProp name="Argument.value">skp-oauthed1@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:clientAPI_another_user_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">ci:clientAPI_another_user_client_authorization</stringProp>
            <stringProp name="Argument.value">NDEzNGIyYWMtYTE1ZS00ZmJhLWE2NzQtMzk0NzdhYzk3ZjBkOnd4dE1xY1RUdENzNU9CaDNZcHZ3UlE9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:clientAPI_noscope_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">ci:clientAPI_noscope_client_authorization</stringProp>
            <stringProp name="Argument.value">OTc5ZmJjNDYtOGY1ZC00YzQxLWIzM2UtNDc5OTk5NjQwYzk3OkFTUWovRFJETFhzTE9Ec1Y0VGk0Q1E9PQ=</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ci:clientAPI_another_email_address" elementType="Argument">
            <stringProp name="Argument.name">ci:clientAPI_another_email_address</stringProp>
            <stringProp name="Argument.value">tli-portaladmin@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="RC Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="rc:cas_service" elementType="Argument">
            <stringProp name="Argument.name">rc:cas_service</stringProp>
            <stringProp name="Argument.value">loginrc1.col.test.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:account_service" elementType="Argument">
            <stringProp name="Argument.name">rc:account_service</stringProp>
            <stringProp name="Argument.value">acc1rc1svc.qai.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:auth_service" elementType="Argument">
            <stringProp name="Argument.name">rc:auth_service</stringProp>
            <stringProp name="Argument.value">authrc1svc.qai.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:auth_service_port" elementType="Argument">
            <stringProp name="Argument.name">rc:auth_service_port</stringProp>
            <stringProp name="Argument.value">80</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:auth_service_protocol" elementType="Argument">
            <stringProp name="Argument.name">rc:auth_service_protocol</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:oauth_service" elementType="Argument">
            <stringProp name="Argument.name">rc:oauth_service</stringProp>
            <stringProp name="Argument.value">authenticationrc1.col.test.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:oauth_service_port" elementType="Argument">
            <stringProp name="Argument.name">rc:oauth_service_port</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:oauth_service_protocol" elementType="Argument">
            <stringProp name="Argument.name">rc:oauth_service_protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:oauth_service_baseURL" elementType="Argument">
            <stringProp name="Argument.name">rc:oauth_service_baseURL</stringProp>
            <stringProp name="Argument.value">https://authenticationrc1.col.test.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:client_id" elementType="Argument">
            <stringProp name="Argument.name">rc:client_id</stringProp>
            <stringProp name="Argument.value">42e43f73-e8e9-47ed-bb87-26444b07b074</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:client_secret" elementType="Argument">
            <stringProp name="Argument.name">rc:client_secret</stringProp>
            <stringProp name="Argument.value">a1xGHCtteUNdMDBxPXxRyg==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:client_redirect_uri" elementType="Argument">
            <stringProp name="Argument.name">rc:client_redirect_uri</stringProp>
            <stringProp name="Argument.value">http://www.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:client_scopes" elementType="Argument">
            <stringProp name="Argument.name">rc:client_scopes</stringProp>
            <stringProp name="Argument.value">read</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:user_id" elementType="Argument">
            <stringProp name="Argument.name">rc:user_id</stringProp>
            <stringProp name="Argument.value">715467957737095429</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:email_address" elementType="Argument">
            <stringProp name="Argument.name">rc:email_address</stringProp>
            <stringProp name="Argument.value">skp-oauthrc1@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:password" elementType="Argument">
            <stringProp name="Argument.name">rc:password</stringProp>
            <stringProp name="Argument.value">secret11</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:token_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">rc:token_client_authorization</stringProp>
            <stringProp name="Argument.value">NDJlNDNmNzMtZThlOS00N2VkLWJiODctMjY0NDRiMDdiMDc0OmExeEdIQ3R0ZVVOZE1EQnhQWHhSeWc9PQ====</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:token_admin_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">rc:token_admin_client_authorization</stringProp>
            <stringProp name="Argument.value">YWQyY2M5OWMtYTY4Ni00MjBmLWI4MTYtNWNhZmZlOGQ4YjNlOktvUXNJMnl3eWNmYUlIdXhFd0paSHc9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:validate_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">rc:validate_client_authorization</stringProp>
            <stringProp name="Argument.value">NDJlNDNmNzMtZThlOS00N2VkLWJiODctMjY0NDRiMDdiMDc0OmExeEdIQ3R0ZVVOZE1EQnhQWHhSeWc9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:principal" elementType="Argument">
            <stringProp name="Argument.name">rc:principal</stringProp>
            <stringProp name="Argument.value">testUser@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:invalid_auth_header" elementType="Argument">
            <stringProp name="Argument.name">rc:invalid_auth_header</stringProp>
            <stringProp name="Argument.value">N2YzMzUyMTctMzY4Yy00YzlkLThhYjctNzliZjI3ZGI5M2U2OjZBNEQwZzdpMFlkdGpFM2NEOWxtUmc9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:bad_auth_header" elementType="Argument">
            <stringProp name="Argument.name">rc:bad_auth_header</stringProp>
            <stringProp name="Argument.value">YWEzNGNlYWUtNDE4=I3ZmNmMDAxM2ViOmMvTXJ1b0FhZktLUk5xdlpRNHRsN</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:other_valid_auth_header" elementType="Argument">
            <stringProp name="Argument.name">rc:other_valid_auth_header</stringProp>
            <stringProp name="Argument.value">Y2RlMGJiYjYtYjFlNC00MGZkLTk3Y2YtOGJkYTMwYTc4Nzc5OnRGcHJOMFo0ajcrQ2MyNkRPRFpqdHc9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:email_address_softlockout" elementType="Argument">
            <stringProp name="Argument.name">rc:email_address_softlockout</stringProp>
            <stringProp name="Argument.value">sm-oauthrc1soflockout@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:account_service_protocol" elementType="Argument">
            <stringProp name="Argument.name">rc:account_service_protocol</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:account_service_port" elementType="Argument">
            <stringProp name="Argument.name">rc:account_service_port</stringProp>
            <stringProp name="Argument.value">80</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:oauth_dc1" elementType="Argument">
            <stringProp name="Argument.name">rc:oauth_dc1</stringProp>
            <stringProp name="Argument.value">oauth1rc1svc.qai.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:oauth_dc2" elementType="Argument">
            <stringProp name="Argument.name">rc:oauth_dc2</stringProp>
            <stringProp name="Argument.value">oauth2rc1svc.qai.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:email_address_suspended" elementType="Argument">
            <stringProp name="Argument.name">rc:email_address_suspended</stringProp>
            <stringProp name="Argument.value">sm-s1@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:implicit_client_id" elementType="Argument">
            <stringProp name="Argument.name">rc:implicit_client_id</stringProp>
            <stringProp name="Argument.value">903dc7b0-43a3-49c0-b9cf-e61e88f80ba9</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:implicit_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">rc:implicit_client_authorization</stringProp>
            <stringProp name="Argument.value">OTAzZGM3YjAtNDNhMy00OWMwLWI5Y2YtZTYxZTg4ZjgwYmE5OmFUditCOS8rOEs5aDg2dGUzQzROMWc9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:non-implicit_auto-approved_client_id" elementType="Argument">
            <stringProp name="Argument.name">rc:non-implicit_auto-approved_client_id</stringProp>
            <stringProp name="Argument.value">e04b4b7e-60eb-4bb8-9896-e5eeea7d7ff3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:non-implicit_non-auto-approved_client_id" elementType="Argument">
            <stringProp name="Argument.name">rc:non-implicit_non-auto-approved_client_id</stringProp>
            <stringProp name="Argument.value">4eeaa09a-e217-4802-9684-e1d10a0c373e</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:internal_service_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">rc:internal_service_client_authorization</stringProp>
            <stringProp name="Argument.value">MDI2ODMzMDQtMGM5OC00OTU4LTgxZjgtMmJkZjgxYWNlZjIzOlQ3V2JyUW5nRkZkTXJhbnZFOURhekE9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:oauth_dc1_node1" elementType="Argument">
            <stringProp name="Argument.name">rc:oauth_dc1_node1</stringProp>
            <stringProp name="Argument.value">oauth1rc1svc1.cs.qai.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:oauth_dc1_node2" elementType="Argument">
            <stringProp name="Argument.name">rc:oauth_dc1_node2</stringProp>
            <stringProp name="Argument.value">oauth1rc1svc1.cs.qai.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:update_password_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">rc:update_password_client_authorization</stringProp>
            <stringProp name="Argument.value">${__P(update_password_client_authorization,MGY0MTA1ZjgtZGY4MS00NGYwLThlYmYtNDQ2MDkwYWMzNjc1OnlxU1ROK3FEV1VFTHh3QXhrNkpreFE9PQ==)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:update_password_email_address" elementType="Argument">
            <stringProp name="Argument.name">rc:update_password_email_address</stringProp>
            <stringProp name="Argument.value">${__P(update_password_email_address,sm-rc1oauthupdateemail@jedix.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:crossdc_pause" elementType="Argument">
            <stringProp name="Argument.name">rc:crossdc_pause</stringProp>
            <stringProp name="Argument.value">500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:launcher_url" elementType="Argument">
            <stringProp name="Argument.name">rc:launcher_url</stringProp>
            <stringProp name="Argument.value">launcherrc1.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:global_g2m_user" elementType="Argument">
            <stringProp name="Argument.name">rc:global_g2m_user</stringProp>
            <stringProp name="Argument.value">sm-rc1ws@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:public_client_id" elementType="Argument">
            <stringProp name="Argument.name">rc:public_client_id</stringProp>
            <stringProp name="Argument.value">2861a774-990f-4eb7-8737-c9553de77761</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:public_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">rc:public_client_authorization</stringProp>
            <stringProp name="Argument.value">Mjg2MWE3NzQtOTkwZi00ZWI3LTg3MzctYzk1NTNkZTc3NzYxOmR1bW15</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:public_client_redirect_uri" elementType="Argument">
            <stringProp name="Argument.name">rc:public_client_redirect_uri</stringProp>
            <stringProp name="Argument.value">http://www.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:password_reset_required_email_address" elementType="Argument">
            <stringProp name="Argument.name">rc:password_reset_required_email_address</stringProp>
            <stringProp name="Argument.value">sm-oauthrc1passwordresetrequired@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:password_reset_required_user_id" elementType="Argument">
            <stringProp name="Argument.name">rc:password_reset_required_user_id</stringProp>
            <stringProp name="Argument.value">8529075885572984326</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:apigee_client_id" elementType="Argument">
            <stringProp name="Argument.name">rc:apigee_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId, 5RoyxS/gLR9nUdV7AAEyUA==:+Ke88jAK7FCpxkQ1+zBPO5tIe1E2TzBz+4u6bT03QLR/1ryRb7Ie4gB0qiSHa88TGCRFurHp43snO/tfoNDn7e7hrqHJG6swJIWtYSwCKk0=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:oob_mismatch_client_id" elementType="Argument">
            <stringProp name="Argument.name">rc:oob_mismatch_client_id</stringProp>
            <stringProp name="Argument.value">7e030b24-0348-4902-93ee-5e48105922e1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:oob_client_id" elementType="Argument">
            <stringProp name="Argument.name">rc:oob_client_id</stringProp>
            <stringProp name="Argument.value">553f02af-7e57-4e36-a692-f5dbdb0d90c6</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:oob_auto_client_id" elementType="Argument">
            <stringProp name="Argument.name">rc:oob_auto_client_id</stringProp>
            <stringProp name="Argument.value">e2fdfd32-b503-4baa-a31e-866e58591e21</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:oob_not_registered_client_id" elementType="Argument">
            <stringProp name="Argument.name">rc:oob_not_registered_client_id</stringProp>
            <stringProp name="Argument.value">293fc1a2-8146-4acb-9319-bc640d7badc6</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:oob_client_credentials" elementType="Argument">
            <stringProp name="Argument.name">rc:oob_client_credentials</stringProp>
            <stringProp name="Argument.value">NTUzZjAyYWYtN2U1Ny00ZTM2LWE2OTItZjVkYmRiMGQ5MGM2Om5DL2p1SDJvY1VpT0FuOHp5N1dVcmc9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:oob_auto_client_credentials" elementType="Argument">
            <stringProp name="Argument.name">rc:oob_auto_client_credentials</stringProp>
            <stringProp name="Argument.value">ZTJmZGZkMzItYjUwMy00YmFhLWEzMWUtODY2ZTU4NTkxZTIxOnJuRG1lRENlV2d3VER4dGFmdFp2R0E9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:oauth_basic" elementType="Argument">
            <stringProp name="Argument.name">rc:oauth_basic</stringProp>
            <stringProp name="Argument.value">NDkyOWIxNzctYjM0ZC00YjU5LTlmYzQtYWZjZDI2YjlkZTMwOllPMmR0dmJIK0RDNHZqek10em96SlE9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:portal_service_protocol" elementType="Argument">
            <stringProp name="Argument.name">rc:portal_service_protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:portal_service_url" elementType="Argument">
            <stringProp name="Argument.name">rc:portal_service_url</stringProp>
            <stringProp name="Argument.value">portalrc1svc.qai.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:portal_admin_email" elementType="Argument">
            <stringProp name="Argument.name">rc:portal_admin_email</stringProp>
            <stringProp name="Argument.value">tli-portaladmin@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:modifedClient_clientId" elementType="Argument">
            <stringProp name="Argument.name">rc:modifedClient_clientId</stringProp>
            <stringProp name="Argument.value">4929b177-b34d-4b59-9fc4-afcd26b9de30</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:portal_admin_userId" elementType="Argument">
            <stringProp name="Argument.name">rc:portal_admin_userId</stringProp>
            <stringProp name="Argument.value">5945434654894216966</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:multibyte_emailAddress" elementType="Argument">
            <stringProp name="Argument.name">rc:multibyte_emailAddress</stringProp>
            <stringProp name="Argument.value">sm-rc1multibyte-de-zn@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:auditor_service" elementType="Argument">
            <stringProp name="Argument.name">rc:auditor_service</stringProp>
            <stringProp name="Argument.value">auditrc1svc.qai.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:junk_theme_client_id" elementType="Argument">
            <stringProp name="Argument.name">rc:junk_theme_client_id</stringProp>
            <stringProp name="Argument.value">9d4e64f5-8460-4d1a-9d4b-7af257120321</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:g2mEndpoint_client_id" elementType="Argument">
            <stringProp name="Argument.name">rc:g2mEndpoint_client_id</stringProp>
            <stringProp name="Argument.value">5e681dd8-5472-462c-af15-bdd4f1c1a594</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:direct_code_client_id" elementType="Argument">
            <stringProp name="Argument.name">rc:direct_code_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId,JXmQpOC+7queSlqgcXG5sA==:G5NOqTLSbLn/qv7fyqEj57FdsPTbG/dYGXH3XfpSH9JrlY4dqTpwIlMpmNu/3gEDwx9ilxsn0QIzVGR4JQ/8ahMjv94CjoyPtv//DlCg4N0=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:direct_code_client_secret" elementType="Argument">
            <stringProp name="Argument.name">rc:direct_code_client_secret</stringProp>
            <stringProp name="Argument.value">decrypt(clientSecret,t+0V5wocAMjwqv3738p3kQ==:gQWuMnjsw9DeTksBcAACCgN3PTp53yX3/HHhP2nWTqD2t84j13IDXKqczojRq/FGSLJR5MampqqFGPiiHmNZ2A==)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:direct_code_authorization" elementType="Argument">
            <stringProp name="Argument.name">rc:direct_code_authorization</stringProp>
            <stringProp name="Argument.value">N2UyYWRjNmYtZDY0MC00MDkxLWIzNDgtOTBmMzgwYmJmMzViOkdtYjA5OWRzbnBZbnRYTkN5MUorUnc9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:direct_code_target_client_id" elementType="Argument">
            <stringProp name="Argument.name">rc:direct_code_target_client_id</stringProp>
            <stringProp name="Argument.value">c74a71b9-9c27-4a35-8485-83131760bc15</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:direct_code_target_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">rc:direct_code_target_client_authorization</stringProp>
            <stringProp name="Argument.value">Yzc0YTcxYjktOWMyNy00YTM1LTg0ODUtODMxMzE3NjBiYzE1OkUzeno1dnczQW44VllPWWlWaXYwTGc9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:direct_code_consumer_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">rc:direct_code_consumer_client_authorization</stringProp>
            <stringProp name="Argument.value">Yjg2MjM2ZTktMWMyYi00ZDAwLWFhMDgtOGU3ZGU0YmY1NTczOmxlKzRKUkZla2F1a3UyUnZtRHNJV0E9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:clientAPI_client_id" elementType="Argument">
            <stringProp name="Argument.name">rc:clientAPI_client_id</stringProp>
            <stringProp name="Argument.value">7aefb8b9-d97c-442a-bf59-ed586ef2e619</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:clientAPI_client_id_2" elementType="Argument">
            <stringProp name="Argument.name">rc:clientAPI_client_id_2</stringProp>
            <stringProp name="Argument.value">a44a2a41-0368-477a-a447-aed37c5c97db</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:clientAPI_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">rc:clientAPI_client_authorization</stringProp>
            <stringProp name="Argument.value">N2FlZmI4YjktZDk3Yy00NDJhLWJmNTktZWQ1ODZlZjJlNjE5OjdIcUM1Z3llSnlsZ1pyak1YSzluQ1E9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:clientAPI_email_address" elementType="Argument">
            <stringProp name="Argument.name">rc:clientAPI_email_address</stringProp>
            <stringProp name="Argument.value">skp-oauthrc1@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:clientAPI_another_user_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">rc:clientAPI_another_user_client_authorization</stringProp>
            <stringProp name="Argument.value">ZjIyNTg4N2YtYTNkNC00MDQ3LTk2MzItZmFiODRjMDYyNGQ0OjVONDZzZmlVQU5POHRKT0FKNEwxWFE9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:clientAPI_noscope_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">rc:clientAPI_noscope_client_authorization</stringProp>
            <stringProp name="Argument.value">ZTI2MDNkYjktMTMxZS00MWVjLThjNDQtNDJiNmI2ZWIwNzRlOjdQK3BySVZKUDdpbHh3KzhOdVdBekE9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rc:clientAPI_another_email_address" elementType="Argument">
            <stringProp name="Argument.name">rc:clientAPI_another_email_address</stringProp>
            <stringProp name="Argument.value">tli-portaladmin@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Stage Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="stage:cas_service" elementType="Argument">
            <stringProp name="Argument.name">stage:cas_service</stringProp>
            <stringProp name="Argument.value">loginstage.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:account_service" elementType="Argument">
            <stringProp name="Argument.name">stage:account_service</stringProp>
            <stringProp name="Argument.value">accstagesvc.las.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:auth_service" elementType="Argument">
            <stringProp name="Argument.name">stage:auth_service</stringProp>
            <stringProp name="Argument.value">authstage.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:auth_service_port" elementType="Argument">
            <stringProp name="Argument.name">stage:auth_service_port</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:auth_service_protocol" elementType="Argument">
            <stringProp name="Argument.name">stage:auth_service_protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:oauth_service" elementType="Argument">
            <stringProp name="Argument.name">stage:oauth_service</stringProp>
            <stringProp name="Argument.value">authenticationstage.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:oauth_service_port" elementType="Argument">
            <stringProp name="Argument.name">stage:oauth_service_port</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:oauth_service_protocol" elementType="Argument">
            <stringProp name="Argument.name">stage:oauth_service_protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:oauth_service_baseURL" elementType="Argument">
            <stringProp name="Argument.name">stage:oauth_service_baseURL</stringProp>
            <stringProp name="Argument.value">https://authenticationstage.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:client_id" elementType="Argument">
            <stringProp name="Argument.name">stage:client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientID, iGjB5w4uUv6JuSnpmmRn4Q==:YzQUAPECbgQ0eLGldI/3sx6A2vV1J/6nvmXWqAN8KiM3VaEb1qfJPTBCMkz1iUaClgXYx21cBOwnH3yS0TSogg+J8wDbAczjtuS7XW/spdY=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:client_secret" elementType="Argument">
            <stringProp name="Argument.name">stage:client_secret</stringProp>
            <stringProp name="Argument.value">decrypt(clientSecret, 9XIHioQcJxVTa2jNQNrGCA==:wehYv+k+nKIbgumWO09tW0q6mjSfkVL5N8F8x79iS6GJvZUGdfbRDzFdMRvasmxnhM4s5vMYf86sWO8lWJ1Tqw==)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:client_redirect_uri" elementType="Argument">
            <stringProp name="Argument.name">stage:client_redirect_uri</stringProp>
            <stringProp name="Argument.value">http://www.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:client_scopes" elementType="Argument">
            <stringProp name="Argument.name">stage:client_scopes</stringProp>
            <stringProp name="Argument.value">read</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:user_id" elementType="Argument">
            <stringProp name="Argument.name">stage:user_id</stringProp>
            <stringProp name="Argument.value">3201287840241426949</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:email_address" elementType="Argument">
            <stringProp name="Argument.name">stage:email_address</stringProp>
            <stringProp name="Argument.value">sm-global7@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:password" elementType="Argument">
            <stringProp name="Argument.name">stage:password</stringProp>
            <stringProp name="Argument.value">decrypt(password, B3u0vpyMjqitvk2VpXV3dQ==:2k0BpvIUCmkGf8WhrvIjRE/xe2Iu765esh1GmYnn0ZTi77kAbV8Bvowu3T4/mGKP)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:token_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">stage:token_client_authorization</stringProp>
            <stringProp name="Argument.value">decrypt(clientPair, Y1vAxw9aHjIOSnV0lSxRyA==:GPbRE3LLDbqwpeFbbKY1dYfZSUTElwlMY82gK5PSNzrDyV04qmhYpf8s2UPXOcnhNb1+AbLFPAaKNXyuqcG5yLA68YWJqxxIIeP8x/54kFRBpQkhWXgyEDIrwIbT1qaDixGYpk41R8+l9+UMaPcaVjL9F8yxQVZB1e08pmOCozA1xL3gXdkXJTVA/uRlIcoe)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:token_admin_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">stage:token_admin_client_authorization</stringProp>
            <stringProp name="Argument.value">decrypt(clientPair, Zo5LyhL6l2UAFoFj3B9M7A==:EZeowgjZTJp3cMUTEN7IS4xofjz7++RD4akx89qy0dmNMdVw6E4DtkgKCBgpQJ0Buwmr6jUtj9+LeXuYQz93P/8k/+G10ZaQeJg+lmo6zXOmCQm0Ss4LfuopuRnwphCbQJQPcjnyp19gQswFJCgGAoMywLkiyCaIarEmbHxv1k84sxwvyWLvyiCwTO7y/maI)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:validate_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">stage:validate_client_authorization</stringProp>
            <stringProp name="Argument.value">decrypt(clientPair, Y1vAxw9aHjIOSnV0lSxRyA==:GPbRE3LLDbqwpeFbbKY1dYfZSUTElwlMY82gK5PSNzrDyV04qmhYpf8s2UPXOcnhNb1+AbLFPAaKNXyuqcG5yLA68YWJqxxIIeP8x/54kFRBpQkhWXgyEDIrwIbT1qaDixGYpk41R8+l9+UMaPcaVjL9F8yxQVZB1e08pmOCozA1xL3gXdkXJTVA/uRlIcoe)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:principal" elementType="Argument">
            <stringProp name="Argument.name">stage:principal</stringProp>
            <stringProp name="Argument.value">sm-global7@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:other_valid_auth_header" elementType="Argument">
            <stringProp name="Argument.name">stage:other_valid_auth_header</stringProp>
            <stringProp name="Argument.value">decrypt(clientPair, ok0AuPiABDHFPEw2LTzMnA==:4kM4T1og3LhMSUGVB5Jo0KKPPSG4YdPZmS58UJte9VadR4aDEn/BkLR1YEmVqIsjKyk14QeOoh7752EaBBhpn4rlHe0EvRGZVLElPYiMOmNTHby1nOERK4T5PibO9xo+7pQhrw6KY9O8QTugwoO1ek9bXXMFoxpPUHRI2cqpnPmErD+aMIcrTQtVlfG7FiU9)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:invalid_redirect_uri" elementType="Argument">
            <stringProp name="Argument.name">stage:invalid_redirect_uri</stringProp>
            <stringProp name="Argument.value">http://invalid.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:invalid_client_id" elementType="Argument">
            <stringProp name="Argument.name">stage:invalid_client_id</stringProp>
            <stringProp name="Argument.value">bb56dfbf-529b-588e-b16f-2c8gdg1124fc</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:invalid_response_type" elementType="Argument">
            <stringProp name="Argument.name">stage:invalid_response_type</stringProp>
            <stringProp name="Argument.value">invalid</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:invalid_client_scopes" elementType="Argument">
            <stringProp name="Argument.name">stage:invalid_client_scopes</stringProp>
            <stringProp name="Argument.value">everything</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:invalid_authorization_code" elementType="Argument">
            <stringProp name="Argument.name">stage:invalid_authorization_code</stringProp>
            <stringProp name="Argument.value">1-iad-invalid-85ac-4839-890d-3c7c64c0dffc</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:invalid_grant_type" elementType="Argument">
            <stringProp name="Argument.name">stage:invalid_grant_type</stringProp>
            <stringProp name="Argument.value">invalid</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:invalid_email_address" elementType="Argument">
            <stringProp name="Argument.name">stage:invalid_email_address</stringProp>
            <stringProp name="Argument.value">invalidoauthuser@invalid.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:invalid_password" elementType="Argument">
            <stringProp name="Argument.name">stage:invalid_password</stringProp>
            <stringProp name="Argument.value">invalid</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:invalid_access_token" elementType="Argument">
            <stringProp name="Argument.name">stage:invalid_access_token</stringProp>
            <stringProp name="Argument.value">1-iad-invalid-85ac-4839-890d-3c7c64c0dffc</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:invalid_refresh_token" elementType="Argument">
            <stringProp name="Argument.name">stage:invalid_refresh_token</stringProp>
            <stringProp name="Argument.value">1-iad-invalid-85ac-4839-890d-3c7c64c0dffc</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:email_address_softlockout" elementType="Argument">
            <stringProp name="Argument.name">stage:email_address_softlockout</stringProp>
            <stringProp name="Argument.value">sm-oauthglobalsoflockout@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:account_service_port" elementType="Argument">
            <stringProp name="Argument.name">stage:account_service_port</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:oauth_dc1" elementType="Argument">
            <stringProp name="Argument.name">stage:oauth_dc1</stringProp>
            <stringProp name="Argument.value">oauthstagesvc.las.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:oauth_dc2" elementType="Argument">
            <stringProp name="Argument.name">stage:oauth_dc2</stringProp>
            <stringProp name="Argument.value">oauthstagesvc.iad.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:email_address_suspended" elementType="Argument">
            <stringProp name="Argument.name">stage:email_address_suspended</stringProp>
            <stringProp name="Argument.value">sm-s2@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:implicit_client_id" elementType="Argument">
            <stringProp name="Argument.name">stage:implicit_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientID, XspyhWDsgJYmIq2o7bQAnQ==:5ZIjKV/SpKWjT44D0/tsBpk1k0bGiq4kdtXzlxYXWEtWFzZ6tmR0DOBdQI5ChVeWRuJRDnTa+6kgdLg4aNMARpSm8GYBmjzsTPpyWARMNvM=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:implicit_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">stage:implicit_client_authorization</stringProp>
            <stringProp name="Argument.value">decrypt(clientPair, W9zMWkSIaqWEyHpo69cUUw==:GxmcMgcDePx1W3QEi3bWVzsuLzOHJTYApVYTEr6CeT4pBopUSZFgrRI1ZSKdRbtMrdZjKIJs1c+w6Hy1FEEX97XV3gZNyhEmna2PYU9Vpgk4Yi7EOVvP/qS5EMlFTiTC82tVvJ8KwgOz82J+RfiEIthTM1nEKcxwN5W2Mp8ZqbBqCUpImP7sir9pUBw27cAN)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:non-implicit_auto-approved_client_id" elementType="Argument">
            <stringProp name="Argument.name">stage:non-implicit_auto-approved_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientID, lm7uKy+Hhe87uZhJUpkz+g==:LC5mggmWlV2aB0JIcQjoFKBGRmPm/wIDXZMUtI6GdXa1xgN+BuDxWY+OVqtihRQMK10W5W5ihI5RpTOQ72/T4If+I/d7odUJ23uHSTKXXVA=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:non-implicit_non-auto-approved_client_id" elementType="Argument">
            <stringProp name="Argument.name">stage:non-implicit_non-auto-approved_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientID, jEsbtekOcJqPgx1+jr5Z6g==:rYp8oxBbvSY8qa/FNeQGpTSWGzkroRMBfzqd3RdoX7675Bze6FBZ/80Qgph6imPO07Ed2+HS6ZLOFqXq97NHwObzkOJBEh1RKQ/VUqORgmk=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:internal_service_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">stage:internal_service_client_authorization</stringProp>
            <stringProp name="Argument.value">decrypt(clientPair, eX6LN+aninnh7xWfwPSQNw==:maFsemCEF6kpmr3PjWoTKmrCPGFmGf4uU86Yv9ItWhHvC8CdR9eUt/oxBRwDinKT21x5OP712adt3rFUqDU5yl3BFNy3lroT2iq5xLc7zbzaEka44zp4YKC3Avgv2qDQT2d8Ee1YhPuoDb2cGr5Coqlaxck9kK3QX/vnSkvchJ+eKimH78Rc4uiMwHpzq/As)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:oauth_dc1_name" elementType="Argument">
            <stringProp name="Argument.name">stage:oauth_dc1_name</stringProp>
            <stringProp name="Argument.value">las</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:oauth_dc2_name" elementType="Argument">
            <stringProp name="Argument.name">stage:oauth_dc2_name</stringProp>
            <stringProp name="Argument.value">iad</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:enableDCTests" elementType="Argument">
            <stringProp name="Argument.name">stage:enableDCTests</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:oauth_dc1_node1" elementType="Argument">
            <stringProp name="Argument.name">stage:oauth_dc1_node1</stringProp>
            <stringProp name="Argument.value">oauthstagesvc1.las.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:oauth_dc1_node2" elementType="Argument">
            <stringProp name="Argument.name">stage:oauth_dc1_node2</stringProp>
            <stringProp name="Argument.value">oauthstagesvc2.las.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:update_password_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">stage:update_password_client_authorization</stringProp>
            <stringProp name="Argument.value">decrypt(clientPair, tFqTAhaWRrdIB4uETS9C4g==:36nWRZ11aBboOuPGskRlZodeDfbZJ8sT3zYmUxF8VPNr3iMmsiIk/6GywwYt7lON/XXlyStqrb9x6Y8z5CBiVkHb/mjAhw1Ry0ZtNIv2IpAEiZpTyMWJwMmUAdUyuySSHT3EmtwqOZDUjvndjb9qdTHaJTa1w6q2+dDqGfw3Y2aAl3QLkOma/Mf3im+tf1aY)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:update_password_email_address" elementType="Argument">
            <stringProp name="Argument.name">stage:update_password_email_address</stringProp>
            <stringProp name="Argument.value">sm-oauthupdateemail@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:crossdc_pause" elementType="Argument">
            <stringProp name="Argument.name">stage:crossdc_pause</stringProp>
            <stringProp name="Argument.value">500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:g2m_url" elementType="Argument">
            <stringProp name="Argument.name">stage:g2m_url</stringProp>
            <stringProp name="Argument.value">globalstage.gotomeeting.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:global_g2m_user" elementType="Argument">
            <stringProp name="Argument.name">stage:global_g2m_user</stringProp>
            <stringProp name="Argument.value">sm-sglivema@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:launcher_url" elementType="Argument">
            <stringProp name="Argument.name">stage:launcher_url</stringProp>
            <stringProp name="Argument.value">downloadstage.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:public_client_id" elementType="Argument">
            <stringProp name="Argument.name">stage:public_client_id</stringProp>
            <stringProp name="Argument.value">d9669bd1-c5c2-44a1-bfb0-65d0ea0eee05</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:public_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">stage:public_client_authorization</stringProp>
            <stringProp name="Argument.value">ZDk2NjliZDEtYzVjMi00NGExLWJmYjAtNjVkMGVhMGVlZTA1OmR1bW15</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:public_client_redirect_uri" elementType="Argument">
            <stringProp name="Argument.name">stage:public_client_redirect_uri</stringProp>
            <stringProp name="Argument.value">http://www.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:password_reset_required_email_address" elementType="Argument">
            <stringProp name="Argument.name">stage:password_reset_required_email_address</stringProp>
            <stringProp name="Argument.value">sm-oauthpasswordresetrequired@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:password_reset_required_user_id" elementType="Argument">
            <stringProp name="Argument.name">stage:password_reset_required_user_id</stringProp>
            <stringProp name="Argument.value">124172607860534533</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:apigee_client_id" elementType="Argument">
            <stringProp name="Argument.name">stage:apigee_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId, is2fk4jN2ynlIwH4VXZ4BQ==:CI818V8qXG5kXOz2Rj5oYHgNKEfeALL03BH5BKNnmuIp/3jqKVdITRZOfA9Vb/1tNvd10FB/YWTO6FGmer3lNHinYsAyG6rDu6RSs+9c3rI=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:oob_mismatch_client_id" elementType="Argument">
            <stringProp name="Argument.name">stage:oob_mismatch_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId, 3PvuQ/1Xo7fesMLEwGLdTA==:NFv3CAMk5+0NdPhQ+jv88EAoSWIPCR4RlXyIfWtnSMmSYjulaSOXZvl7gIagU4vGhiTepBemGcpv1FFKFYqC6uXMefNzpHmcjJRu6oZolaU=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:oob_client_id" elementType="Argument">
            <stringProp name="Argument.name">stage:oob_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId, SumusogCkf+mdQ0yDAHb9w==:IjCFFugI4viwn9rd+XT2SwXPT/z81OLzijvoo/TNbFg2sStlkb+i42bmOKzcSJaOajSkRPcj1NXPEbkBXEDVyt2+13ZPUEyU4TAGoyksnTc=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:oob_auto_client_id" elementType="Argument">
            <stringProp name="Argument.name">stage:oob_auto_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId, jjwq4hSrz38EzVtxpxEDFg==:v1grCRu0AWVJnM2dyUY4OS6CvTvQkNDKYD5HVADpsY22drlGhNoFphL45ROXu+vJwuWjWLsLhpkX0BBieSMUD20+nOXhjfkq03PcfDUCgOI=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:oob_not_registered_client_id" elementType="Argument">
            <stringProp name="Argument.name">stage:oob_not_registered_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId, 0edXeegi40w66X1rAesqAQ==:dcRuJFL5waJO9kXajhTFhLRHs2GBkXPYZfMYtqOxRZR36gTobWqc35r1T1n0Zzj6UCf8aeq5DglglsomnWNlQ9wXm4FLzJU1SwsOi6VHHBg=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:oob_client_credentials" elementType="Argument">
            <stringProp name="Argument.name">stage:oob_client_credentials</stringProp>
            <stringProp name="Argument.value">decrypt(clientSecret, SID+Ljg2yUuPM5PXM04ybQ==:W+ZlA/kJe9gWLIXDWr1KvsaM0fs9xghkgxbDgKLLwX3Rh0Lenv6CMhAg/FgOuT9sm4wGvqcG/WALDcvvdtLQcMuXmHfLoryMYTvz6d2OqqZ3gQekrCh74+pjA2BmsnLrRh97L95+fQh7RQQB59hFf/67ld1PgtmWqjh4jGWfSuJgm7aYq6TXqQBSx1KgVGFo)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:oob_auto_client_credentials" elementType="Argument">
            <stringProp name="Argument.name">stage:oob_auto_client_credentials</stringProp>
            <stringProp name="Argument.value">decrypt(clientSecret, 4g+ZdyQMjV4gFbx676oPgQ==:y/BJqCpf2RBkmWK12P13FNExV64yINZcKA83DbwqXUmfn+G+C5I3jUsrYkSM3/8Xvxfx0EHMLn6aRSlR0aVlUGW6wJ8z9l+Dyhnirr8CfRQ+f5D9NLMgZ0TmE0GxvmEdYNE9MWYVS8QLhTuVqjZS29E71ADxP7H20PEoljRbg+plXbJTcJ5jynSC7b8cmdM1)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:portal_service_protocol" elementType="Argument">
            <stringProp name="Argument.name">stage:portal_service_protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:oauth_basic" elementType="Argument">
            <stringProp name="Argument.name">stage:oauth_basic</stringProp>
            <stringProp name="Argument.value">decrypt(clientSecret, A6tRIAdId7ohsSQH3cvw0g==:ye6aAm3Gs0YQcukNsDFy5OMm//fCg4rSA7ip2JkZSmLzRdWLFkGc7ZQeuCOGbW8MUUyzzfPbPO0i9fIL1NN5Uhuw+8llJ6KnlnXgNS1FQBIVXs7Pkdq0PgR+GxK4RKXXF1lNitbnu4Co+1a49NkDvSdZbbRypOHs5f1bOuUwC1bOvafk5yRBJX4Y+OR3zfvh)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:portal_service_url" elementType="Argument">
            <stringProp name="Argument.name">stage:portal_service_url</stringProp>
            <stringProp name="Argument.value">portalstage.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:portal_admin_email" elementType="Argument">
            <stringProp name="Argument.name">stage:portal_admin_email</stringProp>
            <stringProp name="Argument.value">portalsvc-liveadmin@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:modifedClient_clientId" elementType="Argument">
            <stringProp name="Argument.name">stage:modifedClient_clientId</stringProp>
            <stringProp name="Argument.value">9618ad42-fc6a-4779-888e-dd6f9f48a536</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:portal_admin_userId" elementType="Argument">
            <stringProp name="Argument.name">stage:portal_admin_userId</stringProp>
            <stringProp name="Argument.value">4333027253609885702</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:multibyte_emailAddress" elementType="Argument">
            <stringProp name="Argument.name">stage:multibyte_emailAddress</stringProp>
            <stringProp name="Argument.value">sm-multibyte-de-zn@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:auditor_service" elementType="Argument">
            <stringProp name="Argument.name">stage:auditor_service</stringProp>
            <stringProp name="Argument.value">auditstagesvc.las.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:junk_theme_client_id" elementType="Argument">
            <stringProp name="Argument.name">stage:junk_theme_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId,gCQXeoZnM3HWPQPzPezDJQ==:UFMuiNUXFZG9eY2pS2tKmMd4VT4b27Czw8wL9SOTWAe6xRmXQqM9zpOdb2Xk6IdaljPmJIeXelsyVaYrAfx1fcCw/xET3AkxczTBiHHYC2w=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:g2mEndpoint_client_id" elementType="Argument">
            <stringProp name="Argument.name">stage:g2mEndpoint_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId,0y8VB8FWURekJTWM6qEocw==:DqLpeQ6nc770qCcL61Up6YI3OPi8gmE1T04NNiPbcn9jfTtj60Yv87Z2KNjEBcuvf7PeJpAy57/30sTm6fhw8cxHrI4Hehz0+HbVO+k2XKg=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:direct_code_client_id" elementType="Argument">
            <stringProp name="Argument.name">stage:direct_code_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId,Eca3S+MhA1SOKJwvzgqWUQ==:2CX7pIMi/9EfsP9ikZf9Yz41LBb3VFs9C16q6jtshfnPAw9ndq4/I2Hs9isDm6wE1r1KoOx0YeG0qGKwWAf88CDvnt6UeakGnuCVxaoTNns=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:direct_code_authorization" elementType="Argument">
            <stringProp name="Argument.name">stage:direct_code_authorization</stringProp>
            <stringProp name="Argument.value">decrypt(authorization,TTe78gzIyUuRKRUB++9Qmg==:zN6mbwxN8xSNh6E8r9AYTmzIglupLVhBbfVONO0tzbGmsklz4pYfzVe7uzD4Fw9qryjs/1V471h4PowaiuNuI3yiE94hBjLMZZnCzt8J5GaRgNjhbDqL2LXp8YtDKSQAMYEc1ijna1S3WN4bRjSRSGqcaiRalszflE/piiAhpXSqClofBnX6dt8//1l0Cpuq)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:direct_code_target_client_id" elementType="Argument">
            <stringProp name="Argument.name">stage:direct_code_target_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId,2vhTuO16oqHfoxzVYOFgfg==:tLjmsEVej6iI7pPpD6+U83ri3wOTTqe9GlzqPcKMEQDyXulR47yD5vkJ41QCTzv5SmPnzW7kfa/ou7bQB4Y9NBxaufHo3BS+v8ZsawYNHvk=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:direct_code_target_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">stage:direct_code_target_client_authorization</stringProp>
            <stringProp name="Argument.value">decrypt(authorization,RXc4iwd5QlXBYhgp61itbA==:jUZwrTtJCTwb7srE0U375ZfvtORvU2M8wxarvtT8PIh256CJKH63V9Yry5RrzKGSAxTZ1AsBYq16AtEWENw1UHivo7z2QPwhwfJGVmVi77I2PrDGAIGUrF8Vf3hGsf1oL9f4i8dKPfRfXT6cBZDd+rYgnPP9tl9df/n4Un+n96a1t7pGDOHfB1lAQ6lukKV9)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:direct_code_consumer_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">stage:direct_code_consumer_client_authorization</stringProp>
            <stringProp name="Argument.value">decrypt(authorization,487khy36+GSQCyMhIR986Q==:G2/+9cU+AfPZenNnQYiT5QkNOx9+1HEhdTyaySbbYnMD3Eb2YbINL1TbiKF7inikqzIsdduOpD2p/FmO0bjyTtAkVkYVn/cSPlVE55hrW9/+CVrYeTeoYmNM2Lj0xvFsJ9AnFkvg28EkErE7PdbEixDLoGjHA4dgPMkUW85XPmOoH+BeFBcY62enxGRVMuGK)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:clientAPI_client_id" elementType="Argument">
            <stringProp name="Argument.name">stage:clientAPI_client_id</stringProp>
            <stringProp name="Argument.value">babb7e04-c848-4e11-adbe-43b412e949c4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:clientAPI_client_id_2" elementType="Argument">
            <stringProp name="Argument.name">stage:clientAPI_client_id_2</stringProp>
            <stringProp name="Argument.value">6a5b2f76-b680-40f4-ac63-94654276f782</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:clientAPI_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">stage:clientAPI_client_authorization</stringProp>
            <stringProp name="Argument.value">YmFiYjdlMDQtYzg0OC00ZTExLWFkYmUtNDNiNDEyZTk0OWM0OlVuVWNoU2hjNmpUU1ZINEQ4TEhaNEE9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:clientAPI_email_address" elementType="Argument">
            <stringProp name="Argument.name">stage:clientAPI_email_address</stringProp>
            <stringProp name="Argument.value">sm-clientapi1@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:clientAPI_another_user_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">stage:clientAPI_another_user_client_authorization</stringProp>
            <stringProp name="Argument.value">ODViMjkzNGMtODM1Yy00NjM4LWFmM2MtZjk2YjM3Yzk3N2FkOjhiUUt4Ym1NWFh2RU10WEhmcnZoSlE9PQ==	</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:clientAPI_noscope_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">stage:clientAPI_noscope_client_authorization</stringProp>
            <stringProp name="Argument.value">MDA3MGI4MGYtYzFjNi00ZDBlLTg5ZWUtM2ZkYjJkNmMwOTYwOjNaZmRpNHVTNC83MEQ5NDl1THJ1THc9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="stage:clientAPI_another_email_address" elementType="Argument">
            <stringProp name="Argument.name">stage:clientAPI_another_email_address</stringProp>
            <stringProp name="Argument.value">sm-clientapi2@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Live Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="live:cas_service" elementType="Argument">
            <stringProp name="Argument.name">live:cas_service</stringProp>
            <stringProp name="Argument.value">login.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:account_service" elementType="Argument">
            <stringProp name="Argument.name">live:account_service</stringProp>
            <stringProp name="Argument.value">accsvc.las.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:auth_service" elementType="Argument">
            <stringProp name="Argument.name">live:auth_service</stringProp>
            <stringProp name="Argument.value">auth.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:auth_service_port" elementType="Argument">
            <stringProp name="Argument.name">live:auth_service_port</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:auth_service_protocol" elementType="Argument">
            <stringProp name="Argument.name">live:auth_service_protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:oauth_service" elementType="Argument">
            <stringProp name="Argument.name">live:oauth_service</stringProp>
            <stringProp name="Argument.value">authentication.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:oauth_service_port" elementType="Argument">
            <stringProp name="Argument.name">live:oauth_service_port</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:oauth_service_protocol" elementType="Argument">
            <stringProp name="Argument.name">live:oauth_service_protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:oauth_service_baseURL" elementType="Argument">
            <stringProp name="Argument.name">live:oauth_service_baseURL</stringProp>
            <stringProp name="Argument.value">https://authentication.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:client_id" elementType="Argument">
            <stringProp name="Argument.name">live:client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientID, iGjB5w4uUv6JuSnpmmRn4Q==:YzQUAPECbgQ0eLGldI/3sx6A2vV1J/6nvmXWqAN8KiM3VaEb1qfJPTBCMkz1iUaClgXYx21cBOwnH3yS0TSogg+J8wDbAczjtuS7XW/spdY=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:client_secret" elementType="Argument">
            <stringProp name="Argument.name">live:client_secret</stringProp>
            <stringProp name="Argument.value">decrypt(clientSecret, 9XIHioQcJxVTa2jNQNrGCA==:wehYv+k+nKIbgumWO09tW0q6mjSfkVL5N8F8x79iS6GJvZUGdfbRDzFdMRvasmxnhM4s5vMYf86sWO8lWJ1Tqw==)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:client_redirect_uri" elementType="Argument">
            <stringProp name="Argument.name">live:client_redirect_uri</stringProp>
            <stringProp name="Argument.value">http://www.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:client_scopes" elementType="Argument">
            <stringProp name="Argument.name">live:client_scopes</stringProp>
            <stringProp name="Argument.value">read</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:user_id" elementType="Argument">
            <stringProp name="Argument.name">live:user_id</stringProp>
            <stringProp name="Argument.value">3201287840241426949</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:email_address" elementType="Argument">
            <stringProp name="Argument.name">live:email_address</stringProp>
            <stringProp name="Argument.value">sm-global7@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:password" elementType="Argument">
            <stringProp name="Argument.name">live:password</stringProp>
            <stringProp name="Argument.value">decrypt(password, B3u0vpyMjqitvk2VpXV3dQ==:2k0BpvIUCmkGf8WhrvIjRE/xe2Iu765esh1GmYnn0ZTi77kAbV8Bvowu3T4/mGKP)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:token_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">live:token_client_authorization</stringProp>
            <stringProp name="Argument.value">decrypt(clientPair, Y1vAxw9aHjIOSnV0lSxRyA==:GPbRE3LLDbqwpeFbbKY1dYfZSUTElwlMY82gK5PSNzrDyV04qmhYpf8s2UPXOcnhNb1+AbLFPAaKNXyuqcG5yLA68YWJqxxIIeP8x/54kFRBpQkhWXgyEDIrwIbT1qaDixGYpk41R8+l9+UMaPcaVjL9F8yxQVZB1e08pmOCozA1xL3gXdkXJTVA/uRlIcoe)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:token_admin_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">live:token_admin_client_authorization</stringProp>
            <stringProp name="Argument.value">decrypt(clientPair, Zo5LyhL6l2UAFoFj3B9M7A==:EZeowgjZTJp3cMUTEN7IS4xofjz7++RD4akx89qy0dmNMdVw6E4DtkgKCBgpQJ0Buwmr6jUtj9+LeXuYQz93P/8k/+G10ZaQeJg+lmo6zXOmCQm0Ss4LfuopuRnwphCbQJQPcjnyp19gQswFJCgGAoMywLkiyCaIarEmbHxv1k84sxwvyWLvyiCwTO7y/maI)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:validate_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">live:validate_client_authorization</stringProp>
            <stringProp name="Argument.value">decrypt(clientPair, Y1vAxw9aHjIOSnV0lSxRyA==:GPbRE3LLDbqwpeFbbKY1dYfZSUTElwlMY82gK5PSNzrDyV04qmhYpf8s2UPXOcnhNb1+AbLFPAaKNXyuqcG5yLA68YWJqxxIIeP8x/54kFRBpQkhWXgyEDIrwIbT1qaDixGYpk41R8+l9+UMaPcaVjL9F8yxQVZB1e08pmOCozA1xL3gXdkXJTVA/uRlIcoe)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:principal" elementType="Argument">
            <stringProp name="Argument.name">live:principal</stringProp>
            <stringProp name="Argument.value">sm-global7@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:other_valid_auth_header" elementType="Argument">
            <stringProp name="Argument.name">live:other_valid_auth_header</stringProp>
            <stringProp name="Argument.value">decrypt(clientPair, ok0AuPiABDHFPEw2LTzMnA==:4kM4T1og3LhMSUGVB5Jo0KKPPSG4YdPZmS58UJte9VadR4aDEn/BkLR1YEmVqIsjKyk14QeOoh7752EaBBhpn4rlHe0EvRGZVLElPYiMOmNTHby1nOERK4T5PibO9xo+7pQhrw6KY9O8QTugwoO1ek9bXXMFoxpPUHRI2cqpnPmErD+aMIcrTQtVlfG7FiU9)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:invalid_redirect_uri" elementType="Argument">
            <stringProp name="Argument.name">live:invalid_redirect_uri</stringProp>
            <stringProp name="Argument.value">http://invalid.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:invalid_client_id" elementType="Argument">
            <stringProp name="Argument.name">live:invalid_client_id</stringProp>
            <stringProp name="Argument.value">bb56dfbf-529b-588e-b16f-2c8gdg1124fc</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:invalid_response_type" elementType="Argument">
            <stringProp name="Argument.name">live:invalid_response_type</stringProp>
            <stringProp name="Argument.value">invalid</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:invalid_client_scopes" elementType="Argument">
            <stringProp name="Argument.name">live:invalid_client_scopes</stringProp>
            <stringProp name="Argument.value">everything</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:invalid_authorization_code" elementType="Argument">
            <stringProp name="Argument.name">live:invalid_authorization_code</stringProp>
            <stringProp name="Argument.value">1-las-invalid-85ac-4839-890d-3c7c64c0dffc</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:invalid_grant_type" elementType="Argument">
            <stringProp name="Argument.name">live:invalid_grant_type</stringProp>
            <stringProp name="Argument.value">invalid</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:invalid_email_address" elementType="Argument">
            <stringProp name="Argument.name">live:invalid_email_address</stringProp>
            <stringProp name="Argument.value">invalidoauthuser@invalid.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:invalid_password" elementType="Argument">
            <stringProp name="Argument.name">live:invalid_password</stringProp>
            <stringProp name="Argument.value">invalid</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:invalid_access_token" elementType="Argument">
            <stringProp name="Argument.name">live:invalid_access_token</stringProp>
            <stringProp name="Argument.value">1-iad-invalid-85ac-4839-890d-3c7c64c0dffc</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:invalid_refresh_token" elementType="Argument">
            <stringProp name="Argument.name">live:invalid_refresh_token</stringProp>
            <stringProp name="Argument.value">1-iad-invalid-85ac-4839-890d-3c7c64c0dffc</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:email_address_softlockout" elementType="Argument">
            <stringProp name="Argument.name">live:email_address_softlockout</stringProp>
            <stringProp name="Argument.value">sm-oauthglobalsoflockout@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:account_service_port" elementType="Argument">
            <stringProp name="Argument.name">live:account_service_port</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:oauth_dc1" elementType="Argument">
            <stringProp name="Argument.name">live:oauth_dc1</stringProp>
            <stringProp name="Argument.value">oauthsvc.iad.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:oauth_dc2" elementType="Argument">
            <stringProp name="Argument.name">live:oauth_dc2</stringProp>
            <stringProp name="Argument.value">oauthsvc.las.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:email_address_suspended" elementType="Argument">
            <stringProp name="Argument.name">live:email_address_suspended</stringProp>
            <stringProp name="Argument.value">sm-s2@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:implicit_client_id" elementType="Argument">
            <stringProp name="Argument.name">live:implicit_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientID, XspyhWDsgJYmIq2o7bQAnQ==:5ZIjKV/SpKWjT44D0/tsBpk1k0bGiq4kdtXzlxYXWEtWFzZ6tmR0DOBdQI5ChVeWRuJRDnTa+6kgdLg4aNMARpSm8GYBmjzsTPpyWARMNvM=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:implicit_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">live:implicit_client_authorization</stringProp>
            <stringProp name="Argument.value">decrypt(clientPair, W9zMWkSIaqWEyHpo69cUUw==:GxmcMgcDePx1W3QEi3bWVzsuLzOHJTYApVYTEr6CeT4pBopUSZFgrRI1ZSKdRbtMrdZjKIJs1c+w6Hy1FEEX97XV3gZNyhEmna2PYU9Vpgk4Yi7EOVvP/qS5EMlFTiTC82tVvJ8KwgOz82J+RfiEIthTM1nEKcxwN5W2Mp8ZqbBqCUpImP7sir9pUBw27cAN)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:non-implicit_auto-approved_client_id" elementType="Argument">
            <stringProp name="Argument.name">live:non-implicit_auto-approved_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientID, lm7uKy+Hhe87uZhJUpkz+g==:LC5mggmWlV2aB0JIcQjoFKBGRmPm/wIDXZMUtI6GdXa1xgN+BuDxWY+OVqtihRQMK10W5W5ihI5RpTOQ72/T4If+I/d7odUJ23uHSTKXXVA=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:non-implicit_non-auto-approved_client_id" elementType="Argument">
            <stringProp name="Argument.name">live:non-implicit_non-auto-approved_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientID, jEsbtekOcJqPgx1+jr5Z6g==:rYp8oxBbvSY8qa/FNeQGpTSWGzkroRMBfzqd3RdoX7675Bze6FBZ/80Qgph6imPO07Ed2+HS6ZLOFqXq97NHwObzkOJBEh1RKQ/VUqORgmk=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:internal_service_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">live:internal_service_client_authorization</stringProp>
            <stringProp name="Argument.value">decrypt(clientPair, eX6LN+aninnh7xWfwPSQNw==:maFsemCEF6kpmr3PjWoTKmrCPGFmGf4uU86Yv9ItWhHvC8CdR9eUt/oxBRwDinKT21x5OP712adt3rFUqDU5yl3BFNy3lroT2iq5xLc7zbzaEka44zp4YKC3Avgv2qDQT2d8Ee1YhPuoDb2cGr5Coqlaxck9kK3QX/vnSkvchJ+eKimH78Rc4uiMwHpzq/As)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:oauth_dc1_name" elementType="Argument">
            <stringProp name="Argument.name">live:oauth_dc1_name</stringProp>
            <stringProp name="Argument.value">las</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:oauth_dc2_name" elementType="Argument">
            <stringProp name="Argument.name">live:oauth_dc2_name</stringProp>
            <stringProp name="Argument.value">iad</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:enableDCTests" elementType="Argument">
            <stringProp name="Argument.name">live:enableDCTests</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:oauth_dc1_node1" elementType="Argument">
            <stringProp name="Argument.name">live:oauth_dc1_node1</stringProp>
            <stringProp name="Argument.value">oauthsvc1.las.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:oauth_dc1_node2" elementType="Argument">
            <stringProp name="Argument.name">live:oauth_dc1_node2</stringProp>
            <stringProp name="Argument.value">oauthsvc2.las.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:update_password_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">live:update_password_client_authorization</stringProp>
            <stringProp name="Argument.value">decrypt(clientPair, tFqTAhaWRrdIB4uETS9C4g==:36nWRZ11aBboOuPGskRlZodeDfbZJ8sT3zYmUxF8VPNr3iMmsiIk/6GywwYt7lON/XXlyStqrb9x6Y8z5CBiVkHb/mjAhw1Ry0ZtNIv2IpAEiZpTyMWJwMmUAdUyuySSHT3EmtwqOZDUjvndjb9qdTHaJTa1w6q2+dDqGfw3Y2aAl3QLkOma/Mf3im+tf1aY)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:update_password_email_address" elementType="Argument">
            <stringProp name="Argument.name">live:update_password_email_address</stringProp>
            <stringProp name="Argument.value">sm-oauthupdateemail@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:crossdc_pause" elementType="Argument">
            <stringProp name="Argument.name">live:crossdc_pause</stringProp>
            <stringProp name="Argument.value">500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:g2m_url" elementType="Argument">
            <stringProp name="Argument.name">live:g2m_url</stringProp>
            <stringProp name="Argument.value">global.gotomeeting.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:global_g2m_user" elementType="Argument">
            <stringProp name="Argument.name">live:global_g2m_user</stringProp>
            <stringProp name="Argument.value">sm-sglivema@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:launcher_url" elementType="Argument">
            <stringProp name="Argument.name">live:launcher_url</stringProp>
            <stringProp name="Argument.value">download.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:public_client_id" elementType="Argument">
            <stringProp name="Argument.name">live:public_client_id</stringProp>
            <stringProp name="Argument.value">d9669bd1-c5c2-44a1-bfb0-65d0ea0eee05</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:public_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">live:public_client_authorization</stringProp>
            <stringProp name="Argument.value">ZDk2NjliZDEtYzVjMi00NGExLWJmYjAtNjVkMGVhMGVlZTA1OmR1bW15</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:public_client_redirect_uri" elementType="Argument">
            <stringProp name="Argument.name">live:public_client_redirect_uri</stringProp>
            <stringProp name="Argument.value">http://www.citrixonline.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:password_reset_required_email_address" elementType="Argument">
            <stringProp name="Argument.name">live:password_reset_required_email_address</stringProp>
            <stringProp name="Argument.value">sm-oauthpasswordresetrequired@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:password_reset_required_user_id" elementType="Argument">
            <stringProp name="Argument.name">live:password_reset_required_user_id</stringProp>
            <stringProp name="Argument.value">124172607860534533</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:apigee_client_id" elementType="Argument">
            <stringProp name="Argument.name">live:apigee_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId, MfJqsLtCUsjo+izX7pYJig==:96UgxfCUwdfBLHuUjNsgh1iiPUxtSrSjnYqdMv1rBZJiHBsSVeDKVTU/gCNuFabdCXaL0xUpA11plwGYPIsJiG+2WsV8G9cFOiuOtN5myg0=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:oob_mismatch_client_id" elementType="Argument">
            <stringProp name="Argument.name">live:oob_mismatch_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId, 3PvuQ/1Xo7fesMLEwGLdTA==:NFv3CAMk5+0NdPhQ+jv88EAoSWIPCR4RlXyIfWtnSMmSYjulaSOXZvl7gIagU4vGhiTepBemGcpv1FFKFYqC6uXMefNzpHmcjJRu6oZolaU=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:oob_client_id" elementType="Argument">
            <stringProp name="Argument.name">live:oob_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId, SumusogCkf+mdQ0yDAHb9w==:IjCFFugI4viwn9rd+XT2SwXPT/z81OLzijvoo/TNbFg2sStlkb+i42bmOKzcSJaOajSkRPcj1NXPEbkBXEDVyt2+13ZPUEyU4TAGoyksnTc=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:oob_auto_client_id" elementType="Argument">
            <stringProp name="Argument.name">live:oob_auto_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId, jjwq4hSrz38EzVtxpxEDFg==:v1grCRu0AWVJnM2dyUY4OS6CvTvQkNDKYD5HVADpsY22drlGhNoFphL45ROXu+vJwuWjWLsLhpkX0BBieSMUD20+nOXhjfkq03PcfDUCgOI=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:oob_not_registered_client_id" elementType="Argument">
            <stringProp name="Argument.name">live:oob_not_registered_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId, 0edXeegi40w66X1rAesqAQ==:dcRuJFL5waJO9kXajhTFhLRHs2GBkXPYZfMYtqOxRZR36gTobWqc35r1T1n0Zzj6UCf8aeq5DglglsomnWNlQ9wXm4FLzJU1SwsOi6VHHBg=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:oob_client_credentials" elementType="Argument">
            <stringProp name="Argument.name">live:oob_client_credentials</stringProp>
            <stringProp name="Argument.value">decrypt(clientSecret, SID+Ljg2yUuPM5PXM04ybQ==:W+ZlA/kJe9gWLIXDWr1KvsaM0fs9xghkgxbDgKLLwX3Rh0Lenv6CMhAg/FgOuT9sm4wGvqcG/WALDcvvdtLQcMuXmHfLoryMYTvz6d2OqqZ3gQekrCh74+pjA2BmsnLrRh97L95+fQh7RQQB59hFf/67ld1PgtmWqjh4jGWfSuJgm7aYq6TXqQBSx1KgVGFo)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:oob_auto_client_credentials" elementType="Argument">
            <stringProp name="Argument.name">live:oob_auto_client_credentials</stringProp>
            <stringProp name="Argument.value">decrypt(clientSecret, 4g+ZdyQMjV4gFbx676oPgQ==:y/BJqCpf2RBkmWK12P13FNExV64yINZcKA83DbwqXUmfn+G+C5I3jUsrYkSM3/8Xvxfx0EHMLn6aRSlR0aVlUGW6wJ8z9l+Dyhnirr8CfRQ+f5D9NLMgZ0TmE0GxvmEdYNE9MWYVS8QLhTuVqjZS29E71ADxP7H20PEoljRbg+plXbJTcJ5jynSC7b8cmdM1)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:multibyte_emailAddress" elementType="Argument">
            <stringProp name="Argument.name">live:multibyte_emailAddress</stringProp>
            <stringProp name="Argument.value">sm-multibyte-de-zn@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:auditor_service" elementType="Argument">
            <stringProp name="Argument.name">live:auditor_service</stringProp>
            <stringProp name="Argument.value">auditsvc.las.expertcity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:junk_theme_client_id" elementType="Argument">
            <stringProp name="Argument.name">live:junk_theme_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId,gCQXeoZnM3HWPQPzPezDJQ==:UFMuiNUXFZG9eY2pS2tKmMd4VT4b27Czw8wL9SOTWAe6xRmXQqM9zpOdb2Xk6IdaljPmJIeXelsyVaYrAfx1fcCw/xET3AkxczTBiHHYC2w=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:g2mEndpoint_client_id" elementType="Argument">
            <stringProp name="Argument.name">live:g2mEndpoint_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId,0y8VB8FWURekJTWM6qEocw==:DqLpeQ6nc770qCcL61Up6YI3OPi8gmE1T04NNiPbcn9jfTtj60Yv87Z2KNjEBcuvf7PeJpAy57/30sTm6fhw8cxHrI4Hehz0+HbVO+k2XKg=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:direct_code_client_id" elementType="Argument">
            <stringProp name="Argument.name">live:direct_code_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId,Eca3S+MhA1SOKJwvzgqWUQ==:2CX7pIMi/9EfsP9ikZf9Yz41LBb3VFs9C16q6jtshfnPAw9ndq4/I2Hs9isDm6wE1r1KoOx0YeG0qGKwWAf88CDvnt6UeakGnuCVxaoTNns=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:direct_code_authorization" elementType="Argument">
            <stringProp name="Argument.name">live:direct_code_authorization</stringProp>
            <stringProp name="Argument.value">decrypt(authorization,TTe78gzIyUuRKRUB++9Qmg==:zN6mbwxN8xSNh6E8r9AYTmzIglupLVhBbfVONO0tzbGmsklz4pYfzVe7uzD4Fw9qryjs/1V471h4PowaiuNuI3yiE94hBjLMZZnCzt8J5GaRgNjhbDqL2LXp8YtDKSQAMYEc1ijna1S3WN4bRjSRSGqcaiRalszflE/piiAhpXSqClofBnX6dt8//1l0Cpuq)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:direct_code_target_client_id" elementType="Argument">
            <stringProp name="Argument.name">live:direct_code_target_client_id</stringProp>
            <stringProp name="Argument.value">decrypt(clientId,2vhTuO16oqHfoxzVYOFgfg==:tLjmsEVej6iI7pPpD6+U83ri3wOTTqe9GlzqPcKMEQDyXulR47yD5vkJ41QCTzv5SmPnzW7kfa/ou7bQB4Y9NBxaufHo3BS+v8ZsawYNHvk=)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:direct_code_target_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">live:direct_code_target_client_authorization</stringProp>
            <stringProp name="Argument.value">decrypt(authorization,RXc4iwd5QlXBYhgp61itbA==:jUZwrTtJCTwb7srE0U375ZfvtORvU2M8wxarvtT8PIh256CJKH63V9Yry5RrzKGSAxTZ1AsBYq16AtEWENw1UHivo7z2QPwhwfJGVmVi77I2PrDGAIGUrF8Vf3hGsf1oL9f4i8dKPfRfXT6cBZDd+rYgnPP9tl9df/n4Un+n96a1t7pGDOHfB1lAQ6lukKV9)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:direct_code_consumer_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">live:direct_code_consumer_client_authorization</stringProp>
            <stringProp name="Argument.value">decrypt(authorization,487khy36+GSQCyMhIR986Q==:G2/+9cU+AfPZenNnQYiT5QkNOx9+1HEhdTyaySbbYnMD3Eb2YbINL1TbiKF7inikqzIsdduOpD2p/FmO0bjyTtAkVkYVn/cSPlVE55hrW9/+CVrYeTeoYmNM2Lj0xvFsJ9AnFkvg28EkErE7PdbEixDLoGjHA4dgPMkUW85XPmOoH+BeFBcY62enxGRVMuGK)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:clientAPI_client_id" elementType="Argument">
            <stringProp name="Argument.name">live:clientAPI_client_id</stringProp>
            <stringProp name="Argument.value">babb7e04-c848-4e11-adbe-43b412e949c4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:clientAPI_client_id_2" elementType="Argument">
            <stringProp name="Argument.name">live:clientAPI_client_id_2</stringProp>
            <stringProp name="Argument.value">8020e953-b469-45b7-a991-5b89af9502e6</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:clientAPI_email_address" elementType="Argument">
            <stringProp name="Argument.name">live:clientAPI_email_address</stringProp>
            <stringProp name="Argument.value">sm-clientapi1@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:clientAPI_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">live:clientAPI_client_authorization</stringProp>
            <stringProp name="Argument.value">YmFiYjdlMDQtYzg0OC00ZTExLWFkYmUtNDNiNDEyZTk0OWM0OlVuVWNoU2hjNmpUU1ZINEQ4TEhaNEE9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:clientAPI_another_email_address" elementType="Argument">
            <stringProp name="Argument.name">live:clientAPI_another_email_address</stringProp>
            <stringProp name="Argument.value">sm-clientapi2@jedix.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:clientAPI_another_user_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">live:clientAPI_another_user_client_authorization</stringProp>
            <stringProp name="Argument.value">ODViMjkzNGMtODM1Yy00NjM4LWFmM2MtZjk2YjM3Yzk3N2FkOjhiUUt4Ym1NWFh2RU10WEhmcnZoSlE9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="live:clientAPI_noscope_client_authorization" elementType="Argument">
            <stringProp name="Argument.name">live:clientAPI_noscope_client_authorization</stringProp>
            <stringProp name="Argument.value">MDA3MGI4MGYtYzFjNi00ZDBlLTg5ZWUtM2ZkYjJkNmMwOTYwOjNaZmRpNHVTNC83MEQ5NDl1THJ1THc9PQ==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${oauth_service}</stringProp>
        <stringProp name="HTTPSampler.port">${oauth_service_port}</stringProp>
        <stringProp name="HTTPSampler.connect_timeout">10000</stringProp>
        <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
        <stringProp name="HTTPSampler.protocol">${oauth_service_protocol}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
        <stringProp name="maximumValue">999999</stringProp>
        <stringProp name="minimumValue">100000</stringProp>
        <stringProp name="outputFormat">000000</stringProp>
        <boolProp name="perThread">true</boolProp>
        <stringProp name="randomSeed"></stringProp>
        <stringProp name="variableName">myCounter</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Replace Variables" enabled="true">
        <stringProp name="filename"></stringProp>
        <stringProp name="parameters"></stringProp>
        <boolProp name="resetInterpreter">true</boolProp>
        <stringProp name="script">import org.apache.jmeter.threads.JMeterVariables;

environment = vars.get(&quot;environment&quot;);
String varPrefix = environment + &quot;:&quot;;

//This object holds an intermediate map for the env-specific variables to be substituted.
//We use a secondary map to avoid concurrent modification exceptions
JMeterVariables replacedVariables = new JMeterVariables();

for(mapEntry: vars.entrySet()){
	if(mapEntry.getKey().startsWith(varPrefix)){
		replacedVariables.put(mapEntry.getKey().substring(varPrefix.length()), mapEntry.getValue());
	}
}

vars.putAll(replacedVariables);</stringProp>
      </BeanShellPreProcessor>
      <hashTree/>
      <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Decrypt Variables" enabled="true">
        <stringProp name="filename"></stringProp>
        <stringProp name="parameters"></stringProp>
        <boolProp name="resetInterpreter">true</boolProp>
        <stringProp name="script">import java.util.regex.Pattern;
import java.util.regex.Matcher;
import com.citrix.encryption.SimplifiedEncryptionUtil;

Pattern encryptedValuePattern = Pattern.compile(&quot;decrypt\\((.*), *(.*)\\)&quot;);
SimplifiedEncryptionUtil encryptionUtil = SimplifiedEncryptionUtil.getInstance();
Iterator iterator = vars.getIterator();
while(iterator.hasNext()) {
    Map.Entry element = (Map.Entry) iterator.next();
    if ( !(element.getValue() instanceof String) || element.getKey().contains(&quot;:&quot;) ) continue;
    Matcher matcher = encryptedValuePattern.matcher(element.getValue());
    if (matcher.matches()) {
        String salt = matcher.group(1);
        String encryptedText = matcher.group(2);
        try {
            String decryptedValue = encryptionUtil.decryptStrong(encryptedText, salt);
            vars.put(element.getKey(), decryptedValue);
        } catch(Exception e) {
            log.error(&quot;Decryption failed for property &apos;&quot; + element.getKey() + &quot;&apos;&quot;, e);
        }
    }
}</stringProp>
      </BeanShellPreProcessor>
      <hashTree/>
      <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Encrypt Variables" enabled="true">
        <stringProp name="filename"></stringProp>
        <stringProp name="parameters"></stringProp>
        <boolProp name="resetInterpreter">true</boolProp>
        <stringProp name="script">import java.util.regex.Pattern;
import java.util.regex.Matcher;
import com.citrix.encryption.SimplifiedEncryptionUtil;

EncryptionUtil.getInstance().encryptStrong(&quot;password&quot;, &quot;global_g2m_user&quot;);

Pattern encryptedValuePattern = Pattern.compile(&quot;encrypt\\((.*), *(.*)\\)&quot;);
SimplifiedEncryptionUtil encryptionUtil = SimplifiedEncryptionUtil.getInstance();

Iterator iterator = vars.getIterator();
while(iterator.hasNext()) {
    Map.Entry element = (Map.Entry) iterator.next();
    if ( !(element.getValue() instanceof String) || element.getKey().contains(&quot;:&quot;) ) continue;
    Matcher matcher = encryptedValuePattern.matcher(element.getValue());
    if (matcher.matches()) {
        String salt = matcher.group(1);
        String encryptedText = matcher.group(2);
        try {
            String decryptedValue = encryptionUtil.decryptStrong(encryptedText, salt);
            vars.put(element.getKey(), decryptedValue);
        } catch(Exception e) {
            log.error(&quot;Decryption failed for property &apos;&quot; + element.getKey() + &quot;&apos;&quot;, e);
        }
    }
}</stringProp>
      </BeanShellPreProcessor>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Client Credentials Grant Success with only required parameter" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${__P(loopCount,-1)}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(threadMultiplier,0)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(rampUp,1)}</stringProp>
        <longProp name="ThreadGroup.start_time">1357320917000</longProp>
        <longProp name="ThreadGroup.end_time">1357320917000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${__P(duration,0)}</stringProp>
        <stringProp name="ThreadGroup.delay">${__P(startupDelay,0)}</stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get Access Token" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic ${token_client_authorization}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClientCredentials_GetAccessToken_withOnlyRequiredParameters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">client_credentials</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Expect OK" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Expect access_token" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1599184439">&quot;access_token&quot;\s*:</stringProp>
                <stringProp name="274946519">&quot;expires_in&quot;\s*:</stringProp>
                <stringProp name="545298507">&quot;token_type&quot;\s*:\s*&quot;Bearer&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Expect No Refresh Token" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1432035435">refresh_token</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Access Token Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">access_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;access_token&quot;\s*:\s*&quot;([^\&quot;]*)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOT_FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Refresh Token Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">refresh_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;refresh_token&quot;\s*:\s*&quot;([^\&quot;]*)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOT_FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Validate Token" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic ${validate_client_authorization}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClientCredentials_ValidateToken_withOnlyRequiredParameters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="access_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${access_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">access_token</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/oauth/validate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Expect OK" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Expect client_id" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-544911812">&quot;client_id&quot;\s*:</stringProp>
                <stringProp name="-461539494">&quot;client_authorities&quot;\s*:</stringProp>
                <stringProp name="274946519">&quot;expires_in&quot;\s*:</stringProp>
                <stringProp name="-1214973417">&quot;scope&quot;\s*:</stringProp>
                <stringProp name="-1724563587">&quot;principal&quot;\s*:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Validate Token With Roles By Account Key" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic ${validate_client_authorization}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClientCredentials_ValidateToken_withOptionalParameters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="access_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${access_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">access_token</stringProp>
                </elementProp>
                <elementProp name="by_account" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">by_account</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/oauth/validate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Expect OK" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Expect No_user_account_authorities" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1746471764">&quot;user_account_authorities&quot;\s*:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Validate Token With Roles By Account Key Including Direct" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic ${validate_client_authorization}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClientCredentials_ValidateToken_withOptionalParameters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="access_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${access_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">access_token</stringProp>
                </elementProp>
                <elementProp name="by_account" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">by_account</stringProp>
                </elementProp>
                <elementProp name="include_direct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include_direct</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/oauth/validate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Expect OK" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Expect No_user_account_authorities" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1746471764">&quot;user_account_authorities&quot;\s*:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Revoke Token" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic ${token_client_authorization}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClientCredentials_RevokeToken_withOnlyRequiredParameters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${access_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/oauth/revoke</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Expect OK" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Revalidate Token" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic ${validate_client_authorization}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="CrossDC_Pause" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${crossdc_pause}</stringProp>
          </TestAction>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClientCredentials_RevalidateToken_withOnlyRequiredParameters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="access_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${access_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">access_token</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/oauth/validate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Expect Bad Request" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51508">400</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Expect invalid grant" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1990074688">&quot;error&quot;\s*:\s*&quot;invalid_grant&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <objProp>
          <name></name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>false</code>
            <message>false</message>
            <threadName>false</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <objProp>
          <name></name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>false</code>
            <message>false</message>
            <threadName>false</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.listener.GraphsGeneratorListener guiclass="TestBeanGUI" testclass="kg.apc.jmeter.listener.GraphsGeneratorListener" testname="jp@gc - Graphs Generator" enabled="true">
        <stringProp name="outputBaseFolder">${__P(outputFolder)}</stringProp>
        <stringProp name="resultsFileName">${__P(jmeterResultsFile)}</stringProp>
        <intProp name="exportMode">0</intProp>
        <stringProp name="filePrefix"></stringProp>
        <stringProp name="graphWidth">${__P(graphs_width)}</stringProp>
        <stringProp name="graphHeight">${__P(graphs_height)}</stringProp>
        <stringProp name="paintMarkers">Undefined</stringProp>
        <boolProp name="paintZeroing">true</boolProp>
        <boolProp name="paintGradient">false</boolProp>
        <boolProp name="preventOutliers">false</boolProp>
        <boolProp name="relativeTimes">false</boolProp>
        <boolProp name="autoScaleRows">false</boolProp>
        <stringProp name="limitRows">${__P(graphs_numberOfPointsInRow)}</stringProp>
        <stringProp name="forceY"></stringProp>
        <stringProp name="granulation">${__P(graphs_granulationTime)}</stringProp>
        <stringProp name="lineWeight"></stringProp>
        <boolProp name="aggregateRows">false</boolProp>
        <stringProp name="lowCountLimit"></stringProp>
        <stringProp name="successFilter"></stringProp>
        <boolProp name="includeSamplesWithRegex">false</boolProp>
        <stringProp name="includeLabels"></stringProp>
        <boolProp name="excludeSamplesWithRegex">false</boolProp>
        <stringProp name="excludeLabels"></stringProp>
        <stringProp name="startOffset"></stringProp>
        <stringProp name="endOffset"></stringProp>
      </kg.apc.jmeter.listener.GraphsGeneratorListener>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
